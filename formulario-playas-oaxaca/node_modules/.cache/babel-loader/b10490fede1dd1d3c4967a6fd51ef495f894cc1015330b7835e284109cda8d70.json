{"ast":null,"code":"let _fs;\ntry {\n  _fs = require('graceful-fs');\n} catch (_) {\n  _fs = require('fs');\n}\nconst universalify = require('universalify');\nconst {\n  stringify,\n  stripBom\n} = require('./utils');\nasync function _readFile(file, options = {}) {\n  if (typeof options === 'string') {\n    options = {\n      encoding: options\n    };\n  }\n  const fs = options.fs || _fs;\n  const shouldThrow = 'throws' in options ? options.throws : true;\n  let data = await universalify.fromCallback(fs.readFile)(file, options);\n  data = stripBom(data);\n  let obj;\n  try {\n    obj = JSON.parse(data, options ? options.reviver : null);\n  } catch (err) {\n    if (shouldThrow) {\n      err.message = `${file}: ${err.message}`;\n      throw err;\n    } else {\n      return null;\n    }\n  }\n  return obj;\n}\nconst readFile = universalify.fromPromise(_readFile);\nfunction readFileSync(file, options = {}) {\n  if (typeof options === 'string') {\n    options = {\n      encoding: options\n    };\n  }\n  const fs = options.fs || _fs;\n  const shouldThrow = 'throws' in options ? options.throws : true;\n  try {\n    let content = fs.readFileSync(file, options);\n    content = stripBom(content);\n    return JSON.parse(content, options.reviver);\n  } catch (err) {\n    if (shouldThrow) {\n      err.message = `${file}: ${err.message}`;\n      throw err;\n    } else {\n      return null;\n    }\n  }\n}\nasync function _writeFile(file, obj, options = {}) {\n  const fs = options.fs || _fs;\n  const str = stringify(obj, options);\n  await universalify.fromCallback(fs.writeFile)(file, str, options);\n}\nconst writeFile = universalify.fromPromise(_writeFile);\nfunction writeFileSync(file, obj, options = {}) {\n  const fs = options.fs || _fs;\n  const str = stringify(obj, options);\n  // not sure if fs.writeFileSync returns anything, but just in case\n  return fs.writeFileSync(file, str, options);\n}\nconst jsonfile = {\n  readFile,\n  readFileSync,\n  writeFile,\n  writeFileSync\n};\nmodule.exports = jsonfile;","map":{"version":3,"names":["_fs","require","_","universalify","stringify","stripBom","_readFile","file","options","encoding","fs","shouldThrow","throws","data","fromCallback","readFile","obj","JSON","parse","reviver","err","message","fromPromise","readFileSync","content","_writeFile","str","writeFile","writeFileSync","jsonfile","module","exports"],"sources":["/home/paulo/.Code/web/login-estructura/login-no-funcional/node_modules/jsonfile/index.js"],"sourcesContent":["let _fs\ntry {\n  _fs = require('graceful-fs')\n} catch (_) {\n  _fs = require('fs')\n}\nconst universalify = require('universalify')\nconst { stringify, stripBom } = require('./utils')\n\nasync function _readFile (file, options = {}) {\n  if (typeof options === 'string') {\n    options = { encoding: options }\n  }\n\n  const fs = options.fs || _fs\n\n  const shouldThrow = 'throws' in options ? options.throws : true\n\n  let data = await universalify.fromCallback(fs.readFile)(file, options)\n\n  data = stripBom(data)\n\n  let obj\n  try {\n    obj = JSON.parse(data, options ? options.reviver : null)\n  } catch (err) {\n    if (shouldThrow) {\n      err.message = `${file}: ${err.message}`\n      throw err\n    } else {\n      return null\n    }\n  }\n\n  return obj\n}\n\nconst readFile = universalify.fromPromise(_readFile)\n\nfunction readFileSync (file, options = {}) {\n  if (typeof options === 'string') {\n    options = { encoding: options }\n  }\n\n  const fs = options.fs || _fs\n\n  const shouldThrow = 'throws' in options ? options.throws : true\n\n  try {\n    let content = fs.readFileSync(file, options)\n    content = stripBom(content)\n    return JSON.parse(content, options.reviver)\n  } catch (err) {\n    if (shouldThrow) {\n      err.message = `${file}: ${err.message}`\n      throw err\n    } else {\n      return null\n    }\n  }\n}\n\nasync function _writeFile (file, obj, options = {}) {\n  const fs = options.fs || _fs\n\n  const str = stringify(obj, options)\n\n  await universalify.fromCallback(fs.writeFile)(file, str, options)\n}\n\nconst writeFile = universalify.fromPromise(_writeFile)\n\nfunction writeFileSync (file, obj, options = {}) {\n  const fs = options.fs || _fs\n\n  const str = stringify(obj, options)\n  // not sure if fs.writeFileSync returns anything, but just in case\n  return fs.writeFileSync(file, str, options)\n}\n\nconst jsonfile = {\n  readFile,\n  readFileSync,\n  writeFile,\n  writeFileSync\n}\n\nmodule.exports = jsonfile\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}