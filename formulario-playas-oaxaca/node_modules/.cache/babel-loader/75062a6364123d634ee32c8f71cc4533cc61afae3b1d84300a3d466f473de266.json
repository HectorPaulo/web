{"ast":null,"code":"'use strict';\n\nconst fs = require('graceful-fs');\nconst path = require('path');\nconst mkdirsSync = require('../mkdirs').mkdirsSync;\nconst utimesMillisSync = require('../util/utimes').utimesMillisSync;\nconst stat = require('../util/stat');\nfunction copySync(src, dest, opts) {\n  if (typeof opts === 'function') {\n    opts = {\n      filter: opts\n    };\n  }\n  opts = opts || {};\n  opts.clobber = 'clobber' in opts ? !!opts.clobber : true; // default to true for now\n  opts.overwrite = 'overwrite' in opts ? !!opts.overwrite : opts.clobber; // overwrite falls back to clobber\n\n  // Warn about using preserveTimestamps on 32-bit node\n  if (opts.preserveTimestamps && process.arch === 'ia32') {\n    process.emitWarning('Using the preserveTimestamps option in 32-bit node is not recommended;\\n\\n' + '\\tsee https://github.com/jprichardson/node-fs-extra/issues/269', 'Warning', 'fs-extra-WARN0002');\n  }\n  const {\n    srcStat,\n    destStat\n  } = stat.checkPathsSync(src, dest, 'copy', opts);\n  stat.checkParentPathsSync(src, srcStat, dest, 'copy');\n  if (opts.filter && !opts.filter(src, dest)) return;\n  const destParent = path.dirname(dest);\n  if (!fs.existsSync(destParent)) mkdirsSync(destParent);\n  return getStats(destStat, src, dest, opts);\n}\nfunction getStats(destStat, src, dest, opts) {\n  const statSync = opts.dereference ? fs.statSync : fs.lstatSync;\n  const srcStat = statSync(src);\n  if (srcStat.isDirectory()) return onDir(srcStat, destStat, src, dest, opts);else if (srcStat.isFile() || srcStat.isCharacterDevice() || srcStat.isBlockDevice()) return onFile(srcStat, destStat, src, dest, opts);else if (srcStat.isSymbolicLink()) return onLink(destStat, src, dest, opts);else if (srcStat.isSocket()) throw new Error(`Cannot copy a socket file: ${src}`);else if (srcStat.isFIFO()) throw new Error(`Cannot copy a FIFO pipe: ${src}`);\n  throw new Error(`Unknown file: ${src}`);\n}\nfunction onFile(srcStat, destStat, src, dest, opts) {\n  if (!destStat) return copyFile(srcStat, src, dest, opts);\n  return mayCopyFile(srcStat, src, dest, opts);\n}\nfunction mayCopyFile(srcStat, src, dest, opts) {\n  if (opts.overwrite) {\n    fs.unlinkSync(dest);\n    return copyFile(srcStat, src, dest, opts);\n  } else if (opts.errorOnExist) {\n    throw new Error(`'${dest}' already exists`);\n  }\n}\nfunction copyFile(srcStat, src, dest, opts) {\n  fs.copyFileSync(src, dest);\n  if (opts.preserveTimestamps) handleTimestamps(srcStat.mode, src, dest);\n  return setDestMode(dest, srcStat.mode);\n}\nfunction handleTimestamps(srcMode, src, dest) {\n  // Make sure the file is writable before setting the timestamp\n  // otherwise open fails with EPERM when invoked with 'r+'\n  // (through utimes call)\n  if (fileIsNotWritable(srcMode)) makeFileWritable(dest, srcMode);\n  return setDestTimestamps(src, dest);\n}\nfunction fileIsNotWritable(srcMode) {\n  return (srcMode & 0o200) === 0;\n}\nfunction makeFileWritable(dest, srcMode) {\n  return setDestMode(dest, srcMode | 0o200);\n}\nfunction setDestMode(dest, srcMode) {\n  return fs.chmodSync(dest, srcMode);\n}\nfunction setDestTimestamps(src, dest) {\n  // The initial srcStat.atime cannot be trusted\n  // because it is modified by the read(2) system call\n  // (See https://nodejs.org/api/fs.html#fs_stat_time_values)\n  const updatedSrcStat = fs.statSync(src);\n  return utimesMillisSync(dest, updatedSrcStat.atime, updatedSrcStat.mtime);\n}\nfunction onDir(srcStat, destStat, src, dest, opts) {\n  if (!destStat) return mkDirAndCopy(srcStat.mode, src, dest, opts);\n  return copyDir(src, dest, opts);\n}\nfunction mkDirAndCopy(srcMode, src, dest, opts) {\n  fs.mkdirSync(dest);\n  copyDir(src, dest, opts);\n  return setDestMode(dest, srcMode);\n}\nfunction copyDir(src, dest, opts) {\n  fs.readdirSync(src).forEach(item => copyDirItem(item, src, dest, opts));\n}\nfunction copyDirItem(item, src, dest, opts) {\n  const srcItem = path.join(src, item);\n  const destItem = path.join(dest, item);\n  if (opts.filter && !opts.filter(srcItem, destItem)) return;\n  const {\n    destStat\n  } = stat.checkPathsSync(srcItem, destItem, 'copy', opts);\n  return getStats(destStat, srcItem, destItem, opts);\n}\nfunction onLink(destStat, src, dest, opts) {\n  let resolvedSrc = fs.readlinkSync(src);\n  if (opts.dereference) {\n    resolvedSrc = path.resolve(process.cwd(), resolvedSrc);\n  }\n  if (!destStat) {\n    return fs.symlinkSync(resolvedSrc, dest);\n  } else {\n    let resolvedDest;\n    try {\n      resolvedDest = fs.readlinkSync(dest);\n    } catch (err) {\n      // dest exists and is a regular file or directory,\n      // Windows may throw UNKNOWN error. If dest already exists,\n      // fs throws error anyway, so no need to guard against it here.\n      if (err.code === 'EINVAL' || err.code === 'UNKNOWN') return fs.symlinkSync(resolvedSrc, dest);\n      throw err;\n    }\n    if (opts.dereference) {\n      resolvedDest = path.resolve(process.cwd(), resolvedDest);\n    }\n    if (stat.isSrcSubdir(resolvedSrc, resolvedDest)) {\n      throw new Error(`Cannot copy '${resolvedSrc}' to a subdirectory of itself, '${resolvedDest}'.`);\n    }\n\n    // prevent copy if src is a subdir of dest since unlinking\n    // dest in this case would result in removing src contents\n    // and therefore a broken symlink would be created.\n    if (stat.isSrcSubdir(resolvedDest, resolvedSrc)) {\n      throw new Error(`Cannot overwrite '${resolvedDest}' with '${resolvedSrc}'.`);\n    }\n    return copyLink(resolvedSrc, dest);\n  }\n}\nfunction copyLink(resolvedSrc, dest) {\n  fs.unlinkSync(dest);\n  return fs.symlinkSync(resolvedSrc, dest);\n}\nmodule.exports = copySync;","map":{"version":3,"names":["fs","require","path","mkdirsSync","utimesMillisSync","stat","copySync","src","dest","opts","filter","clobber","overwrite","preserveTimestamps","process","arch","emitWarning","srcStat","destStat","checkPathsSync","checkParentPathsSync","destParent","dirname","existsSync","getStats","statSync","dereference","lstatSync","isDirectory","onDir","isFile","isCharacterDevice","isBlockDevice","onFile","isSymbolicLink","onLink","isSocket","Error","isFIFO","copyFile","mayCopyFile","unlinkSync","errorOnExist","copyFileSync","handleTimestamps","mode","setDestMode","srcMode","fileIsNotWritable","makeFileWritable","setDestTimestamps","chmodSync","updatedSrcStat","atime","mtime","mkDirAndCopy","copyDir","mkdirSync","readdirSync","forEach","item","copyDirItem","srcItem","join","destItem","resolvedSrc","readlinkSync","resolve","cwd","symlinkSync","resolvedDest","err","code","isSrcSubdir","copyLink","module","exports"],"sources":["/home/paulo/.Code/web/login-estructura/login-no-funcional/node_modules/fs-extra/lib/copy/copy-sync.js"],"sourcesContent":["'use strict'\n\nconst fs = require('graceful-fs')\nconst path = require('path')\nconst mkdirsSync = require('../mkdirs').mkdirsSync\nconst utimesMillisSync = require('../util/utimes').utimesMillisSync\nconst stat = require('../util/stat')\n\nfunction copySync (src, dest, opts) {\n  if (typeof opts === 'function') {\n    opts = { filter: opts }\n  }\n\n  opts = opts || {}\n  opts.clobber = 'clobber' in opts ? !!opts.clobber : true // default to true for now\n  opts.overwrite = 'overwrite' in opts ? !!opts.overwrite : opts.clobber // overwrite falls back to clobber\n\n  // Warn about using preserveTimestamps on 32-bit node\n  if (opts.preserveTimestamps && process.arch === 'ia32') {\n    process.emitWarning(\n      'Using the preserveTimestamps option in 32-bit node is not recommended;\\n\\n' +\n      '\\tsee https://github.com/jprichardson/node-fs-extra/issues/269',\n      'Warning', 'fs-extra-WARN0002'\n    )\n  }\n\n  const { srcStat, destStat } = stat.checkPathsSync(src, dest, 'copy', opts)\n  stat.checkParentPathsSync(src, srcStat, dest, 'copy')\n  if (opts.filter && !opts.filter(src, dest)) return\n  const destParent = path.dirname(dest)\n  if (!fs.existsSync(destParent)) mkdirsSync(destParent)\n  return getStats(destStat, src, dest, opts)\n}\n\nfunction getStats (destStat, src, dest, opts) {\n  const statSync = opts.dereference ? fs.statSync : fs.lstatSync\n  const srcStat = statSync(src)\n\n  if (srcStat.isDirectory()) return onDir(srcStat, destStat, src, dest, opts)\n  else if (srcStat.isFile() ||\n           srcStat.isCharacterDevice() ||\n           srcStat.isBlockDevice()) return onFile(srcStat, destStat, src, dest, opts)\n  else if (srcStat.isSymbolicLink()) return onLink(destStat, src, dest, opts)\n  else if (srcStat.isSocket()) throw new Error(`Cannot copy a socket file: ${src}`)\n  else if (srcStat.isFIFO()) throw new Error(`Cannot copy a FIFO pipe: ${src}`)\n  throw new Error(`Unknown file: ${src}`)\n}\n\nfunction onFile (srcStat, destStat, src, dest, opts) {\n  if (!destStat) return copyFile(srcStat, src, dest, opts)\n  return mayCopyFile(srcStat, src, dest, opts)\n}\n\nfunction mayCopyFile (srcStat, src, dest, opts) {\n  if (opts.overwrite) {\n    fs.unlinkSync(dest)\n    return copyFile(srcStat, src, dest, opts)\n  } else if (opts.errorOnExist) {\n    throw new Error(`'${dest}' already exists`)\n  }\n}\n\nfunction copyFile (srcStat, src, dest, opts) {\n  fs.copyFileSync(src, dest)\n  if (opts.preserveTimestamps) handleTimestamps(srcStat.mode, src, dest)\n  return setDestMode(dest, srcStat.mode)\n}\n\nfunction handleTimestamps (srcMode, src, dest) {\n  // Make sure the file is writable before setting the timestamp\n  // otherwise open fails with EPERM when invoked with 'r+'\n  // (through utimes call)\n  if (fileIsNotWritable(srcMode)) makeFileWritable(dest, srcMode)\n  return setDestTimestamps(src, dest)\n}\n\nfunction fileIsNotWritable (srcMode) {\n  return (srcMode & 0o200) === 0\n}\n\nfunction makeFileWritable (dest, srcMode) {\n  return setDestMode(dest, srcMode | 0o200)\n}\n\nfunction setDestMode (dest, srcMode) {\n  return fs.chmodSync(dest, srcMode)\n}\n\nfunction setDestTimestamps (src, dest) {\n  // The initial srcStat.atime cannot be trusted\n  // because it is modified by the read(2) system call\n  // (See https://nodejs.org/api/fs.html#fs_stat_time_values)\n  const updatedSrcStat = fs.statSync(src)\n  return utimesMillisSync(dest, updatedSrcStat.atime, updatedSrcStat.mtime)\n}\n\nfunction onDir (srcStat, destStat, src, dest, opts) {\n  if (!destStat) return mkDirAndCopy(srcStat.mode, src, dest, opts)\n  return copyDir(src, dest, opts)\n}\n\nfunction mkDirAndCopy (srcMode, src, dest, opts) {\n  fs.mkdirSync(dest)\n  copyDir(src, dest, opts)\n  return setDestMode(dest, srcMode)\n}\n\nfunction copyDir (src, dest, opts) {\n  fs.readdirSync(src).forEach(item => copyDirItem(item, src, dest, opts))\n}\n\nfunction copyDirItem (item, src, dest, opts) {\n  const srcItem = path.join(src, item)\n  const destItem = path.join(dest, item)\n  if (opts.filter && !opts.filter(srcItem, destItem)) return\n  const { destStat } = stat.checkPathsSync(srcItem, destItem, 'copy', opts)\n  return getStats(destStat, srcItem, destItem, opts)\n}\n\nfunction onLink (destStat, src, dest, opts) {\n  let resolvedSrc = fs.readlinkSync(src)\n  if (opts.dereference) {\n    resolvedSrc = path.resolve(process.cwd(), resolvedSrc)\n  }\n\n  if (!destStat) {\n    return fs.symlinkSync(resolvedSrc, dest)\n  } else {\n    let resolvedDest\n    try {\n      resolvedDest = fs.readlinkSync(dest)\n    } catch (err) {\n      // dest exists and is a regular file or directory,\n      // Windows may throw UNKNOWN error. If dest already exists,\n      // fs throws error anyway, so no need to guard against it here.\n      if (err.code === 'EINVAL' || err.code === 'UNKNOWN') return fs.symlinkSync(resolvedSrc, dest)\n      throw err\n    }\n    if (opts.dereference) {\n      resolvedDest = path.resolve(process.cwd(), resolvedDest)\n    }\n    if (stat.isSrcSubdir(resolvedSrc, resolvedDest)) {\n      throw new Error(`Cannot copy '${resolvedSrc}' to a subdirectory of itself, '${resolvedDest}'.`)\n    }\n\n    // prevent copy if src is a subdir of dest since unlinking\n    // dest in this case would result in removing src contents\n    // and therefore a broken symlink would be created.\n    if (stat.isSrcSubdir(resolvedDest, resolvedSrc)) {\n      throw new Error(`Cannot overwrite '${resolvedDest}' with '${resolvedSrc}'.`)\n    }\n    return copyLink(resolvedSrc, dest)\n  }\n}\n\nfunction copyLink (resolvedSrc, dest) {\n  fs.unlinkSync(dest)\n  return fs.symlinkSync(resolvedSrc, dest)\n}\n\nmodule.exports = copySync\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}