{"ast":null,"code":"var _jsxFileName = \"/home/paulo/.Code/web/login-estructura/login-no-funcional/src/Components/DashboardPage/DashboardPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport fs from 'fs-extra'; // Para manejar archivos\nimport './DashboardPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashboardPage = () => {\n  _s();\n  const [step, setStep] = useState(1);\n  const [selectedBeach, setSelectedBeach] = useState('');\n  const [rating, setRating] = useState(0);\n  const [visitDate, setVisitDate] = useState('');\n  const [comment, setComment] = useState('');\n  const [subscribe, setSubscribe] = useState(false);\n  const [beaches, setBeaches] = useState([]);\n  useEffect(() => {\n    const fetchBeaches = async () => {\n      try {\n        const response = await axios.get('../../Data/playas.json');\n        setBeaches(response.data);\n      } catch (error) {\n        console.error('Error fetching beaches:', error);\n      }\n    };\n    fetchBeaches();\n  }, []);\n  const handleNextStep = () => {\n    setStep(step + 1);\n  };\n  const handlePrevStep = () => {\n    setStep(step - 1);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    // Actualizar datos en playas.json\n    const updatedBeaches = beaches.map(beach => {\n      if (beach.nombre === selectedBeach) {\n        return {\n          ...beach,\n          usuariosCalificaciones: [...beach.usuariosCalificaciones, {\n            userId: \"014417519\",\n            calificacion: rating,\n            fechaVisita: visitDate,\n            comentarios: comment,\n            inscrito: subscribe\n          }]\n        };\n      }\n      return beach;\n    });\n\n    // Escribir los datos actualizados en playas.json\n    fs.writeFile('../../Data/playas.json', JSON.stringify(updatedBeaches, null, 2), err => {\n      if (err) {\n        console.error('Error writing to playas.json:', err);\n      } else {\n        console.log('Datos actualizados en playas.json');\n      }\n    });\n    alert('Evaluación enviada exitosamente');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(DashboardPage, \"6vVWdPYpFl5lCXoRH5hNhgVBu/M=\");\n_c = DashboardPage;\nexport default DashboardPage;\nvar _c;\n$RefreshReg$(_c, \"DashboardPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","fs","jsxDEV","_jsxDEV","DashboardPage","_s","step","setStep","selectedBeach","setSelectedBeach","rating","setRating","visitDate","setVisitDate","comment","setComment","subscribe","setSubscribe","beaches","setBeaches","fetchBeaches","response","get","data","error","console","handleNextStep","handlePrevStep","handleSubmit","event","preventDefault","updatedBeaches","map","beach","nombre","usuariosCalificaciones","userId","calificacion","fechaVisita","comentarios","inscrito","writeFile","JSON","stringify","err","log","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/paulo/.Code/web/login-estructura/login-no-funcional/src/Components/DashboardPage/DashboardPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport fs from 'fs-extra'; // Para manejar archivos\nimport './DashboardPage.css';\n\nconst DashboardPage = () => {\n  const [step, setStep] = useState(1);\n  const [selectedBeach, setSelectedBeach] = useState('');\n  const [rating, setRating] = useState(0);\n  const [visitDate, setVisitDate] = useState('');\n  const [comment, setComment] = useState('');\n  const [subscribe, setSubscribe] = useState(false);\n  const [beaches, setBeaches] = useState([]);\n\n  useEffect(() => {\n    const fetchBeaches = async () => {\n      try {\n        const response = await axios.get('../../Data/playas.json');\n        setBeaches(response.data);\n      } catch (error) {\n        console.error('Error fetching beaches:', error);\n      }\n    };\n\n    fetchBeaches();\n  }, []);\n\n  const handleNextStep = () => {\n    setStep(step + 1);\n  };\n\n  const handlePrevStep = () => {\n    setStep(step - 1);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    // Actualizar datos en playas.json\n    const updatedBeaches = beaches.map((beach) => {\n      if (beach.nombre === selectedBeach) {\n        return {\n          ...beach,\n          usuariosCalificaciones: [\n            ...beach.usuariosCalificaciones,\n            {\n              userId: \"014417519\",\n              calificacion: rating,\n              fechaVisita: visitDate,\n              comentarios: comment,\n              inscrito: subscribe\n            }\n          ]\n        };\n      }\n      return beach;\n    });\n\n    // Escribir los datos actualizados en playas.json\n    fs.writeFile('../../Data/playas.json', JSON.stringify(updatedBeaches, null, 2), (err) => {\n      if (err) {\n        console.error('Error writing to playas.json:', err);\n      } else {\n        console.log('Datos actualizados en playas.json');\n      }\n    });\n\n    alert('Evaluación enviada exitosamente');\n  };\n\n  return (\n    <div className=\"dashboard-container\">\n      <div className=\"form-container\">\n        {/* Resto del código del componente DashboardPage */}\n      </div>\n    </div>\n  );\n};\n\nexport default DashboardPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}