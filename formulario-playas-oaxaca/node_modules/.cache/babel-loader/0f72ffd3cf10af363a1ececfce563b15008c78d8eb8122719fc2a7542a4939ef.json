{"ast":null,"code":"var capability = require('./capability');\nvar inherits = require('inherits');\nvar response = require('./response');\nvar stream = require('readable-stream');\nvar IncomingMessage = response.IncomingMessage;\nvar rStates = response.readyStates;\nfunction decideMode(preferBinary, useFetch) {\n  if (capability.fetch && useFetch) {\n    return 'fetch';\n  } else if (capability.mozchunkedarraybuffer) {\n    return 'moz-chunked-arraybuffer';\n  } else if (capability.msstream) {\n    return 'ms-stream';\n  } else if (capability.arraybuffer && preferBinary) {\n    return 'arraybuffer';\n  } else {\n    return 'text';\n  }\n}\nvar ClientRequest = module.exports = function (opts) {\n  var self = this;\n  stream.Writable.call(self);\n  self._opts = opts;\n  self._body = [];\n  self._headers = {};\n  if (opts.auth) self.setHeader('Authorization', 'Basic ' + Buffer.from(opts.auth).toString('base64'));\n  Object.keys(opts.headers).forEach(function (name) {\n    self.setHeader(name, opts.headers[name]);\n  });\n  var preferBinary;\n  var useFetch = true;\n  if (opts.mode === 'disable-fetch' || 'requestTimeout' in opts && !capability.abortController) {\n    // If the use of XHR should be preferred. Not typically needed.\n    useFetch = false;\n    preferBinary = true;\n  } else if (opts.mode === 'prefer-streaming') {\n    // If streaming is a high priority but binary compatibility and\n    // the accuracy of the 'content-type' header aren't\n    preferBinary = false;\n  } else if (opts.mode === 'allow-wrong-content-type') {\n    // If streaming is more important than preserving the 'content-type' header\n    preferBinary = !capability.overrideMimeType;\n  } else if (!opts.mode || opts.mode === 'default' || opts.mode === 'prefer-fast') {\n    // Use binary if text streaming may corrupt data or the content-type header, or for speed\n    preferBinary = true;\n  } else {\n    throw new Error('Invalid value for opts.mode');\n  }\n  self._mode = decideMode(preferBinary, useFetch);\n  self._fetchTimer = null;\n  self._socketTimeout = null;\n  self._socketTimer = null;\n  self.on('finish', function () {\n    self._onFinish();\n  });\n};\ninherits(ClientRequest, stream.Writable);\nClientRequest.prototype.setHeader = function (name, value) {\n  var self = this;\n  var lowerName = name.toLowerCase();\n  // This check is not necessary, but it prevents warnings from browsers about setting unsafe\n  // headers. To be honest I'm not entirely sure hiding these warnings is a good thing, but\n  // http-browserify did it, so I will too.\n  if (unsafeHeaders.indexOf(lowerName) !== -1) return;\n  self._headers[lowerName] = {\n    name: name,\n    value: value\n  };\n};\nClientRequest.prototype.getHeader = function (name) {\n  var header = this._headers[name.toLowerCase()];\n  if (header) return header.value;\n  return null;\n};\nClientRequest.prototype.removeHeader = function (name) {\n  var self = this;\n  delete self._headers[name.toLowerCase()];\n};\nClientRequest.prototype._onFinish = function () {\n  var self = this;\n  if (self._destroyed) return;\n  var opts = self._opts;\n  if ('timeout' in opts && opts.timeout !== 0) {\n    self.setTimeout(opts.timeout);\n  }\n  var headersObj = self._headers;\n  var body = null;\n  if (opts.method !== 'GET' && opts.method !== 'HEAD') {\n    body = new Blob(self._body, {\n      type: (headersObj['content-type'] || {}).value || ''\n    });\n  }\n\n  // create flattened list of headers\n  var headersList = [];\n  Object.keys(headersObj).forEach(function (keyName) {\n    var name = headersObj[keyName].name;\n    var value = headersObj[keyName].value;\n    if (Array.isArray(value)) {\n      value.forEach(function (v) {\n        headersList.push([name, v]);\n      });\n    } else {\n      headersList.push([name, value]);\n    }\n  });\n  if (self._mode === 'fetch') {\n    var signal = null;\n    if (capability.abortController) {\n      var controller = new AbortController();\n      signal = controller.signal;\n      self._fetchAbortController = controller;\n      if ('requestTimeout' in opts && opts.requestTimeout !== 0) {\n        self._fetchTimer = global.setTimeout(function () {\n          self.emit('requestTimeout');\n          if (self._fetchAbortController) self._fetchAbortController.abort();\n        }, opts.requestTimeout);\n      }\n    }\n    global.fetch(self._opts.url, {\n      method: self._opts.method,\n      headers: headersList,\n      body: body || undefined,\n      mode: 'cors',\n      credentials: opts.withCredentials ? 'include' : 'same-origin',\n      signal: signal\n    }).then(function (response) {\n      self._fetchResponse = response;\n      self._resetTimers(false);\n      self._connect();\n    }, function (reason) {\n      self._resetTimers(true);\n      if (!self._destroyed) self.emit('error', reason);\n    });\n  } else {\n    var xhr = self._xhr = new global.XMLHttpRequest();\n    try {\n      xhr.open(self._opts.method, self._opts.url, true);\n    } catch (err) {\n      process.nextTick(function () {\n        self.emit('error', err);\n      });\n      return;\n    }\n\n    // Can't set responseType on really old browsers\n    if ('responseType' in xhr) xhr.responseType = self._mode;\n    if ('withCredentials' in xhr) xhr.withCredentials = !!opts.withCredentials;\n    if (self._mode === 'text' && 'overrideMimeType' in xhr) xhr.overrideMimeType('text/plain; charset=x-user-defined');\n    if ('requestTimeout' in opts) {\n      xhr.timeout = opts.requestTimeout;\n      xhr.ontimeout = function () {\n        self.emit('requestTimeout');\n      };\n    }\n    headersList.forEach(function (header) {\n      xhr.setRequestHeader(header[0], header[1]);\n    });\n    self._response = null;\n    xhr.onreadystatechange = function () {\n      switch (xhr.readyState) {\n        case rStates.LOADING:\n        case rStates.DONE:\n          self._onXHRProgress();\n          break;\n      }\n    };\n    // Necessary for streaming in Firefox, since xhr.response is ONLY defined\n    // in onprogress, not in onreadystatechange with xhr.readyState = 3\n    if (self._mode === 'moz-chunked-arraybuffer') {\n      xhr.onprogress = function () {\n        self._onXHRProgress();\n      };\n    }\n    xhr.onerror = function () {\n      if (self._destroyed) return;\n      self._resetTimers(true);\n      self.emit('error', new Error('XHR error'));\n    };\n    try {\n      xhr.send(body);\n    } catch (err) {\n      process.nextTick(function () {\n        self.emit('error', err);\n      });\n      return;\n    }\n  }\n};\n\n/**\n * Checks if xhr.status is readable and non-zero, indicating no error.\n * Even though the spec says it should be available in readyState 3,\n * accessing it throws an exception in IE8\n */\nfunction statusValid(xhr) {\n  try {\n    var status = xhr.status;\n    return status !== null && status !== 0;\n  } catch (e) {\n    return false;\n  }\n}\nClientRequest.prototype._onXHRProgress = function () {\n  var self = this;\n  self._resetTimers(false);\n  if (!statusValid(self._xhr) || self._destroyed) return;\n  if (!self._response) self._connect();\n  self._response._onXHRProgress(self._resetTimers.bind(self));\n};\nClientRequest.prototype._connect = function () {\n  var self = this;\n  if (self._destroyed) return;\n  self._response = new IncomingMessage(self._xhr, self._fetchResponse, self._mode, self._resetTimers.bind(self));\n  self._response.on('error', function (err) {\n    self.emit('error', err);\n  });\n  self.emit('response', self._response);\n};\nClientRequest.prototype._write = function (chunk, encoding, cb) {\n  var self = this;\n  self._body.push(chunk);\n  cb();\n};\nClientRequest.prototype._resetTimers = function (done) {\n  var self = this;\n  global.clearTimeout(self._socketTimer);\n  self._socketTimer = null;\n  if (done) {\n    global.clearTimeout(self._fetchTimer);\n    self._fetchTimer = null;\n  } else if (self._socketTimeout) {\n    self._socketTimer = global.setTimeout(function () {\n      self.emit('timeout');\n    }, self._socketTimeout);\n  }\n};\nClientRequest.prototype.abort = ClientRequest.prototype.destroy = function (err) {\n  var self = this;\n  self._destroyed = true;\n  self._resetTimers(true);\n  if (self._response) self._response._destroyed = true;\n  if (self._xhr) self._xhr.abort();else if (self._fetchAbortController) self._fetchAbortController.abort();\n  if (err) self.emit('error', err);\n};\nClientRequest.prototype.end = function (data, encoding, cb) {\n  var self = this;\n  if (typeof data === 'function') {\n    cb = data;\n    data = undefined;\n  }\n  stream.Writable.prototype.end.call(self, data, encoding, cb);\n};\nClientRequest.prototype.setTimeout = function (timeout, cb) {\n  var self = this;\n  if (cb) self.once('timeout', cb);\n  self._socketTimeout = timeout;\n  self._resetTimers(false);\n};\nClientRequest.prototype.flushHeaders = function () {};\nClientRequest.prototype.setNoDelay = function () {};\nClientRequest.prototype.setSocketKeepAlive = function () {};\n\n// Taken from http://www.w3.org/TR/XMLHttpRequest/#the-setrequestheader%28%29-method\nvar unsafeHeaders = ['accept-charset', 'accept-encoding', 'access-control-request-headers', 'access-control-request-method', 'connection', 'content-length', 'cookie', 'cookie2', 'date', 'dnt', 'expect', 'host', 'keep-alive', 'origin', 'referer', 'te', 'trailer', 'transfer-encoding', 'upgrade', 'via'];","map":{"version":3,"names":["capability","require","inherits","response","stream","IncomingMessage","rStates","readyStates","decideMode","preferBinary","useFetch","fetch","mozchunkedarraybuffer","msstream","arraybuffer","ClientRequest","module","exports","opts","self","Writable","call","_opts","_body","_headers","auth","setHeader","Buffer","from","toString","Object","keys","headers","forEach","name","mode","abortController","overrideMimeType","Error","_mode","_fetchTimer","_socketTimeout","_socketTimer","on","_onFinish","prototype","value","lowerName","toLowerCase","unsafeHeaders","indexOf","getHeader","header","removeHeader","_destroyed","timeout","setTimeout","headersObj","body","method","Blob","type","headersList","keyName","Array","isArray","v","push","signal","controller","AbortController","_fetchAbortController","requestTimeout","global","emit","abort","url","undefined","credentials","withCredentials","then","_fetchResponse","_resetTimers","_connect","reason","xhr","_xhr","XMLHttpRequest","open","err","process","nextTick","responseType","ontimeout","setRequestHeader","_response","onreadystatechange","readyState","LOADING","DONE","_onXHRProgress","onprogress","onerror","send","statusValid","status","e","bind","_write","chunk","encoding","cb","done","clearTimeout","destroy","end","data","once","flushHeaders","setNoDelay","setSocketKeepAlive"],"sources":["/home/paulo/.Code/web/login-estructura/login-no-funcional/node_modules/stream-http/lib/request.js"],"sourcesContent":["var capability = require('./capability')\nvar inherits = require('inherits')\nvar response = require('./response')\nvar stream = require('readable-stream')\n\nvar IncomingMessage = response.IncomingMessage\nvar rStates = response.readyStates\n\nfunction decideMode (preferBinary, useFetch) {\n\tif (capability.fetch && useFetch) {\n\t\treturn 'fetch'\n\t} else if (capability.mozchunkedarraybuffer) {\n\t\treturn 'moz-chunked-arraybuffer'\n\t} else if (capability.msstream) {\n\t\treturn 'ms-stream'\n\t} else if (capability.arraybuffer && preferBinary) {\n\t\treturn 'arraybuffer'\n\t} else {\n\t\treturn 'text'\n\t}\n}\n\nvar ClientRequest = module.exports = function (opts) {\n\tvar self = this\n\tstream.Writable.call(self)\n\n\tself._opts = opts\n\tself._body = []\n\tself._headers = {}\n\tif (opts.auth)\n\t\tself.setHeader('Authorization', 'Basic ' + Buffer.from(opts.auth).toString('base64'))\n\tObject.keys(opts.headers).forEach(function (name) {\n\t\tself.setHeader(name, opts.headers[name])\n\t})\n\n\tvar preferBinary\n\tvar useFetch = true\n\tif (opts.mode === 'disable-fetch' || ('requestTimeout' in opts && !capability.abortController)) {\n\t\t// If the use of XHR should be preferred. Not typically needed.\n\t\tuseFetch = false\n\t\tpreferBinary = true\n\t} else if (opts.mode === 'prefer-streaming') {\n\t\t// If streaming is a high priority but binary compatibility and\n\t\t// the accuracy of the 'content-type' header aren't\n\t\tpreferBinary = false\n\t} else if (opts.mode === 'allow-wrong-content-type') {\n\t\t// If streaming is more important than preserving the 'content-type' header\n\t\tpreferBinary = !capability.overrideMimeType\n\t} else if (!opts.mode || opts.mode === 'default' || opts.mode === 'prefer-fast') {\n\t\t// Use binary if text streaming may corrupt data or the content-type header, or for speed\n\t\tpreferBinary = true\n\t} else {\n\t\tthrow new Error('Invalid value for opts.mode')\n\t}\n\tself._mode = decideMode(preferBinary, useFetch)\n\tself._fetchTimer = null\n\tself._socketTimeout = null\n\tself._socketTimer = null\n\n\tself.on('finish', function () {\n\t\tself._onFinish()\n\t})\n}\n\ninherits(ClientRequest, stream.Writable)\n\nClientRequest.prototype.setHeader = function (name, value) {\n\tvar self = this\n\tvar lowerName = name.toLowerCase()\n\t// This check is not necessary, but it prevents warnings from browsers about setting unsafe\n\t// headers. To be honest I'm not entirely sure hiding these warnings is a good thing, but\n\t// http-browserify did it, so I will too.\n\tif (unsafeHeaders.indexOf(lowerName) !== -1)\n\t\treturn\n\n\tself._headers[lowerName] = {\n\t\tname: name,\n\t\tvalue: value\n\t}\n}\n\nClientRequest.prototype.getHeader = function (name) {\n\tvar header = this._headers[name.toLowerCase()]\n\tif (header)\n\t\treturn header.value\n\treturn null\n}\n\nClientRequest.prototype.removeHeader = function (name) {\n\tvar self = this\n\tdelete self._headers[name.toLowerCase()]\n}\n\nClientRequest.prototype._onFinish = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\tvar opts = self._opts\n\n\tif ('timeout' in opts && opts.timeout !== 0) {\n\t\tself.setTimeout(opts.timeout)\n\t}\n\n\tvar headersObj = self._headers\n\tvar body = null\n\tif (opts.method !== 'GET' && opts.method !== 'HEAD') {\n        body = new Blob(self._body, {\n            type: (headersObj['content-type'] || {}).value || ''\n        });\n    }\n\n\t// create flattened list of headers\n\tvar headersList = []\n\tObject.keys(headersObj).forEach(function (keyName) {\n\t\tvar name = headersObj[keyName].name\n\t\tvar value = headersObj[keyName].value\n\t\tif (Array.isArray(value)) {\n\t\t\tvalue.forEach(function (v) {\n\t\t\t\theadersList.push([name, v])\n\t\t\t})\n\t\t} else {\n\t\t\theadersList.push([name, value])\n\t\t}\n\t})\n\n\tif (self._mode === 'fetch') {\n\t\tvar signal = null\n\t\tif (capability.abortController) {\n\t\t\tvar controller = new AbortController()\n\t\t\tsignal = controller.signal\n\t\t\tself._fetchAbortController = controller\n\n\t\t\tif ('requestTimeout' in opts && opts.requestTimeout !== 0) {\n\t\t\t\tself._fetchTimer = global.setTimeout(function () {\n\t\t\t\t\tself.emit('requestTimeout')\n\t\t\t\t\tif (self._fetchAbortController)\n\t\t\t\t\t\tself._fetchAbortController.abort()\n\t\t\t\t}, opts.requestTimeout)\n\t\t\t}\n\t\t}\n\n\t\tglobal.fetch(self._opts.url, {\n\t\t\tmethod: self._opts.method,\n\t\t\theaders: headersList,\n\t\t\tbody: body || undefined,\n\t\t\tmode: 'cors',\n\t\t\tcredentials: opts.withCredentials ? 'include' : 'same-origin',\n\t\t\tsignal: signal\n\t\t}).then(function (response) {\n\t\t\tself._fetchResponse = response\n\t\t\tself._resetTimers(false)\n\t\t\tself._connect()\n\t\t}, function (reason) {\n\t\t\tself._resetTimers(true)\n\t\t\tif (!self._destroyed)\n\t\t\t\tself.emit('error', reason)\n\t\t})\n\t} else {\n\t\tvar xhr = self._xhr = new global.XMLHttpRequest()\n\t\ttry {\n\t\t\txhr.open(self._opts.method, self._opts.url, true)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\n\t\t// Can't set responseType on really old browsers\n\t\tif ('responseType' in xhr)\n\t\t\txhr.responseType = self._mode\n\n\t\tif ('withCredentials' in xhr)\n\t\t\txhr.withCredentials = !!opts.withCredentials\n\n\t\tif (self._mode === 'text' && 'overrideMimeType' in xhr)\n\t\t\txhr.overrideMimeType('text/plain; charset=x-user-defined')\n\n\t\tif ('requestTimeout' in opts) {\n\t\t\txhr.timeout = opts.requestTimeout\n\t\t\txhr.ontimeout = function () {\n\t\t\t\tself.emit('requestTimeout')\n\t\t\t}\n\t\t}\n\n\t\theadersList.forEach(function (header) {\n\t\t\txhr.setRequestHeader(header[0], header[1])\n\t\t})\n\n\t\tself._response = null\n\t\txhr.onreadystatechange = function () {\n\t\t\tswitch (xhr.readyState) {\n\t\t\t\tcase rStates.LOADING:\n\t\t\t\tcase rStates.DONE:\n\t\t\t\t\tself._onXHRProgress()\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\t// Necessary for streaming in Firefox, since xhr.response is ONLY defined\n\t\t// in onprogress, not in onreadystatechange with xhr.readyState = 3\n\t\tif (self._mode === 'moz-chunked-arraybuffer') {\n\t\t\txhr.onprogress = function () {\n\t\t\t\tself._onXHRProgress()\n\t\t\t}\n\t\t}\n\n\t\txhr.onerror = function () {\n\t\t\tif (self._destroyed)\n\t\t\t\treturn\n\t\t\tself._resetTimers(true)\n\t\t\tself.emit('error', new Error('XHR error'))\n\t\t}\n\n\t\ttry {\n\t\t\txhr.send(body)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\t}\n}\n\n/**\n * Checks if xhr.status is readable and non-zero, indicating no error.\n * Even though the spec says it should be available in readyState 3,\n * accessing it throws an exception in IE8\n */\nfunction statusValid (xhr) {\n\ttry {\n\t\tvar status = xhr.status\n\t\treturn (status !== null && status !== 0)\n\t} catch (e) {\n\t\treturn false\n\t}\n}\n\nClientRequest.prototype._onXHRProgress = function () {\n\tvar self = this\n\n\tself._resetTimers(false)\n\n\tif (!statusValid(self._xhr) || self._destroyed)\n\t\treturn\n\n\tif (!self._response)\n\t\tself._connect()\n\n\tself._response._onXHRProgress(self._resetTimers.bind(self))\n}\n\nClientRequest.prototype._connect = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\n\tself._response = new IncomingMessage(self._xhr, self._fetchResponse, self._mode, self._resetTimers.bind(self))\n\tself._response.on('error', function(err) {\n\t\tself.emit('error', err)\n\t})\n\n\tself.emit('response', self._response)\n}\n\nClientRequest.prototype._write = function (chunk, encoding, cb) {\n\tvar self = this\n\n\tself._body.push(chunk)\n\tcb()\n}\n\nClientRequest.prototype._resetTimers = function (done) {\n\tvar self = this\n\n\tglobal.clearTimeout(self._socketTimer)\n\tself._socketTimer = null\n\n\tif (done) {\n\t\tglobal.clearTimeout(self._fetchTimer)\n\t\tself._fetchTimer = null\n\t} else if (self._socketTimeout) {\n\t\tself._socketTimer = global.setTimeout(function () {\n\t\t\tself.emit('timeout')\n\t\t}, self._socketTimeout)\n\t}\n}\n\nClientRequest.prototype.abort = ClientRequest.prototype.destroy = function (err) {\n\tvar self = this\n\tself._destroyed = true\n\tself._resetTimers(true)\n\tif (self._response)\n\t\tself._response._destroyed = true\n\tif (self._xhr)\n\t\tself._xhr.abort()\n\telse if (self._fetchAbortController)\n\t\tself._fetchAbortController.abort()\n\n\tif (err)\n\t\tself.emit('error', err)\n}\n\nClientRequest.prototype.end = function (data, encoding, cb) {\n\tvar self = this\n\tif (typeof data === 'function') {\n\t\tcb = data\n\t\tdata = undefined\n\t}\n\n\tstream.Writable.prototype.end.call(self, data, encoding, cb)\n}\n\nClientRequest.prototype.setTimeout = function (timeout, cb) {\n\tvar self = this\n\n\tif (cb)\n\t\tself.once('timeout', cb)\n\n\tself._socketTimeout = timeout\n\tself._resetTimers(false)\n}\n\nClientRequest.prototype.flushHeaders = function () {}\nClientRequest.prototype.setNoDelay = function () {}\nClientRequest.prototype.setSocketKeepAlive = function () {}\n\n// Taken from http://www.w3.org/TR/XMLHttpRequest/#the-setrequestheader%28%29-method\nvar unsafeHeaders = [\n\t'accept-charset',\n\t'accept-encoding',\n\t'access-control-request-headers',\n\t'access-control-request-method',\n\t'connection',\n\t'content-length',\n\t'cookie',\n\t'cookie2',\n\t'date',\n\t'dnt',\n\t'expect',\n\t'host',\n\t'keep-alive',\n\t'origin',\n\t'referer',\n\t'te',\n\t'trailer',\n\t'transfer-encoding',\n\t'upgrade',\n\t'via'\n]\n"],"mappings":"AAAA,IAAIA,UAAU,GAAGC,OAAO,CAAC,cAAc,CAAC;AACxC,IAAIC,QAAQ,GAAGD,OAAO,CAAC,UAAU,CAAC;AAClC,IAAIE,QAAQ,GAAGF,OAAO,CAAC,YAAY,CAAC;AACpC,IAAIG,MAAM,GAAGH,OAAO,CAAC,iBAAiB,CAAC;AAEvC,IAAII,eAAe,GAAGF,QAAQ,CAACE,eAAe;AAC9C,IAAIC,OAAO,GAAGH,QAAQ,CAACI,WAAW;AAElC,SAASC,UAAUA,CAAEC,YAAY,EAAEC,QAAQ,EAAE;EAC5C,IAAIV,UAAU,CAACW,KAAK,IAAID,QAAQ,EAAE;IACjC,OAAO,OAAO;EACf,CAAC,MAAM,IAAIV,UAAU,CAACY,qBAAqB,EAAE;IAC5C,OAAO,yBAAyB;EACjC,CAAC,MAAM,IAAIZ,UAAU,CAACa,QAAQ,EAAE;IAC/B,OAAO,WAAW;EACnB,CAAC,MAAM,IAAIb,UAAU,CAACc,WAAW,IAAIL,YAAY,EAAE;IAClD,OAAO,aAAa;EACrB,CAAC,MAAM;IACN,OAAO,MAAM;EACd;AACD;AAEA,IAAIM,aAAa,GAAGC,MAAM,CAACC,OAAO,GAAG,UAAUC,IAAI,EAAE;EACpD,IAAIC,IAAI,GAAG,IAAI;EACff,MAAM,CAACgB,QAAQ,CAACC,IAAI,CAACF,IAAI,CAAC;EAE1BA,IAAI,CAACG,KAAK,GAAGJ,IAAI;EACjBC,IAAI,CAACI,KAAK,GAAG,EAAE;EACfJ,IAAI,CAACK,QAAQ,GAAG,CAAC,CAAC;EAClB,IAAIN,IAAI,CAACO,IAAI,EACZN,IAAI,CAACO,SAAS,CAAC,eAAe,EAAE,QAAQ,GAAGC,MAAM,CAACC,IAAI,CAACV,IAAI,CAACO,IAAI,CAAC,CAACI,QAAQ,CAAC,QAAQ,CAAC,CAAC;EACtFC,MAAM,CAACC,IAAI,CAACb,IAAI,CAACc,OAAO,CAAC,CAACC,OAAO,CAAC,UAAUC,IAAI,EAAE;IACjDf,IAAI,CAACO,SAAS,CAACQ,IAAI,EAAEhB,IAAI,CAACc,OAAO,CAACE,IAAI,CAAC,CAAC;EACzC,CAAC,CAAC;EAEF,IAAIzB,YAAY;EAChB,IAAIC,QAAQ,GAAG,IAAI;EACnB,IAAIQ,IAAI,CAACiB,IAAI,KAAK,eAAe,IAAK,gBAAgB,IAAIjB,IAAI,IAAI,CAAClB,UAAU,CAACoC,eAAgB,EAAE;IAC/F;IACA1B,QAAQ,GAAG,KAAK;IAChBD,YAAY,GAAG,IAAI;EACpB,CAAC,MAAM,IAAIS,IAAI,CAACiB,IAAI,KAAK,kBAAkB,EAAE;IAC5C;IACA;IACA1B,YAAY,GAAG,KAAK;EACrB,CAAC,MAAM,IAAIS,IAAI,CAACiB,IAAI,KAAK,0BAA0B,EAAE;IACpD;IACA1B,YAAY,GAAG,CAACT,UAAU,CAACqC,gBAAgB;EAC5C,CAAC,MAAM,IAAI,CAACnB,IAAI,CAACiB,IAAI,IAAIjB,IAAI,CAACiB,IAAI,KAAK,SAAS,IAAIjB,IAAI,CAACiB,IAAI,KAAK,aAAa,EAAE;IAChF;IACA1B,YAAY,GAAG,IAAI;EACpB,CAAC,MAAM;IACN,MAAM,IAAI6B,KAAK,CAAC,6BAA6B,CAAC;EAC/C;EACAnB,IAAI,CAACoB,KAAK,GAAG/B,UAAU,CAACC,YAAY,EAAEC,QAAQ,CAAC;EAC/CS,IAAI,CAACqB,WAAW,GAAG,IAAI;EACvBrB,IAAI,CAACsB,cAAc,GAAG,IAAI;EAC1BtB,IAAI,CAACuB,YAAY,GAAG,IAAI;EAExBvB,IAAI,CAACwB,EAAE,CAAC,QAAQ,EAAE,YAAY;IAC7BxB,IAAI,CAACyB,SAAS,CAAC,CAAC;EACjB,CAAC,CAAC;AACH,CAAC;AAED1C,QAAQ,CAACa,aAAa,EAAEX,MAAM,CAACgB,QAAQ,CAAC;AAExCL,aAAa,CAAC8B,SAAS,CAACnB,SAAS,GAAG,UAAUQ,IAAI,EAAEY,KAAK,EAAE;EAC1D,IAAI3B,IAAI,GAAG,IAAI;EACf,IAAI4B,SAAS,GAAGb,IAAI,CAACc,WAAW,CAAC,CAAC;EAClC;EACA;EACA;EACA,IAAIC,aAAa,CAACC,OAAO,CAACH,SAAS,CAAC,KAAK,CAAC,CAAC,EAC1C;EAED5B,IAAI,CAACK,QAAQ,CAACuB,SAAS,CAAC,GAAG;IAC1Bb,IAAI,EAAEA,IAAI;IACVY,KAAK,EAAEA;EACR,CAAC;AACF,CAAC;AAED/B,aAAa,CAAC8B,SAAS,CAACM,SAAS,GAAG,UAAUjB,IAAI,EAAE;EACnD,IAAIkB,MAAM,GAAG,IAAI,CAAC5B,QAAQ,CAACU,IAAI,CAACc,WAAW,CAAC,CAAC,CAAC;EAC9C,IAAII,MAAM,EACT,OAAOA,MAAM,CAACN,KAAK;EACpB,OAAO,IAAI;AACZ,CAAC;AAED/B,aAAa,CAAC8B,SAAS,CAACQ,YAAY,GAAG,UAAUnB,IAAI,EAAE;EACtD,IAAIf,IAAI,GAAG,IAAI;EACf,OAAOA,IAAI,CAACK,QAAQ,CAACU,IAAI,CAACc,WAAW,CAAC,CAAC,CAAC;AACzC,CAAC;AAEDjC,aAAa,CAAC8B,SAAS,CAACD,SAAS,GAAG,YAAY;EAC/C,IAAIzB,IAAI,GAAG,IAAI;EAEf,IAAIA,IAAI,CAACmC,UAAU,EAClB;EACD,IAAIpC,IAAI,GAAGC,IAAI,CAACG,KAAK;EAErB,IAAI,SAAS,IAAIJ,IAAI,IAAIA,IAAI,CAACqC,OAAO,KAAK,CAAC,EAAE;IAC5CpC,IAAI,CAACqC,UAAU,CAACtC,IAAI,CAACqC,OAAO,CAAC;EAC9B;EAEA,IAAIE,UAAU,GAAGtC,IAAI,CAACK,QAAQ;EAC9B,IAAIkC,IAAI,GAAG,IAAI;EACf,IAAIxC,IAAI,CAACyC,MAAM,KAAK,KAAK,IAAIzC,IAAI,CAACyC,MAAM,KAAK,MAAM,EAAE;IAC9CD,IAAI,GAAG,IAAIE,IAAI,CAACzC,IAAI,CAACI,KAAK,EAAE;MACxBsC,IAAI,EAAE,CAACJ,UAAU,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAEX,KAAK,IAAI;IACtD,CAAC,CAAC;EACN;;EAEH;EACA,IAAIgB,WAAW,GAAG,EAAE;EACpBhC,MAAM,CAACC,IAAI,CAAC0B,UAAU,CAAC,CAACxB,OAAO,CAAC,UAAU8B,OAAO,EAAE;IAClD,IAAI7B,IAAI,GAAGuB,UAAU,CAACM,OAAO,CAAC,CAAC7B,IAAI;IACnC,IAAIY,KAAK,GAAGW,UAAU,CAACM,OAAO,CAAC,CAACjB,KAAK;IACrC,IAAIkB,KAAK,CAACC,OAAO,CAACnB,KAAK,CAAC,EAAE;MACzBA,KAAK,CAACb,OAAO,CAAC,UAAUiC,CAAC,EAAE;QAC1BJ,WAAW,CAACK,IAAI,CAAC,CAACjC,IAAI,EAAEgC,CAAC,CAAC,CAAC;MAC5B,CAAC,CAAC;IACH,CAAC,MAAM;MACNJ,WAAW,CAACK,IAAI,CAAC,CAACjC,IAAI,EAAEY,KAAK,CAAC,CAAC;IAChC;EACD,CAAC,CAAC;EAEF,IAAI3B,IAAI,CAACoB,KAAK,KAAK,OAAO,EAAE;IAC3B,IAAI6B,MAAM,GAAG,IAAI;IACjB,IAAIpE,UAAU,CAACoC,eAAe,EAAE;MAC/B,IAAIiC,UAAU,GAAG,IAAIC,eAAe,CAAC,CAAC;MACtCF,MAAM,GAAGC,UAAU,CAACD,MAAM;MAC1BjD,IAAI,CAACoD,qBAAqB,GAAGF,UAAU;MAEvC,IAAI,gBAAgB,IAAInD,IAAI,IAAIA,IAAI,CAACsD,cAAc,KAAK,CAAC,EAAE;QAC1DrD,IAAI,CAACqB,WAAW,GAAGiC,MAAM,CAACjB,UAAU,CAAC,YAAY;UAChDrC,IAAI,CAACuD,IAAI,CAAC,gBAAgB,CAAC;UAC3B,IAAIvD,IAAI,CAACoD,qBAAqB,EAC7BpD,IAAI,CAACoD,qBAAqB,CAACI,KAAK,CAAC,CAAC;QACpC,CAAC,EAAEzD,IAAI,CAACsD,cAAc,CAAC;MACxB;IACD;IAEAC,MAAM,CAAC9D,KAAK,CAACQ,IAAI,CAACG,KAAK,CAACsD,GAAG,EAAE;MAC5BjB,MAAM,EAAExC,IAAI,CAACG,KAAK,CAACqC,MAAM;MACzB3B,OAAO,EAAE8B,WAAW;MACpBJ,IAAI,EAAEA,IAAI,IAAImB,SAAS;MACvB1C,IAAI,EAAE,MAAM;MACZ2C,WAAW,EAAE5D,IAAI,CAAC6D,eAAe,GAAG,SAAS,GAAG,aAAa;MAC7DX,MAAM,EAAEA;IACT,CAAC,CAAC,CAACY,IAAI,CAAC,UAAU7E,QAAQ,EAAE;MAC3BgB,IAAI,CAAC8D,cAAc,GAAG9E,QAAQ;MAC9BgB,IAAI,CAAC+D,YAAY,CAAC,KAAK,CAAC;MACxB/D,IAAI,CAACgE,QAAQ,CAAC,CAAC;IAChB,CAAC,EAAE,UAAUC,MAAM,EAAE;MACpBjE,IAAI,CAAC+D,YAAY,CAAC,IAAI,CAAC;MACvB,IAAI,CAAC/D,IAAI,CAACmC,UAAU,EACnBnC,IAAI,CAACuD,IAAI,CAAC,OAAO,EAAEU,MAAM,CAAC;IAC5B,CAAC,CAAC;EACH,CAAC,MAAM;IACN,IAAIC,GAAG,GAAGlE,IAAI,CAACmE,IAAI,GAAG,IAAIb,MAAM,CAACc,cAAc,CAAC,CAAC;IACjD,IAAI;MACHF,GAAG,CAACG,IAAI,CAACrE,IAAI,CAACG,KAAK,CAACqC,MAAM,EAAExC,IAAI,CAACG,KAAK,CAACsD,GAAG,EAAE,IAAI,CAAC;IAClD,CAAC,CAAC,OAAOa,GAAG,EAAE;MACbC,OAAO,CAACC,QAAQ,CAAC,YAAY;QAC5BxE,IAAI,CAACuD,IAAI,CAAC,OAAO,EAAEe,GAAG,CAAC;MACxB,CAAC,CAAC;MACF;IACD;;IAEA;IACA,IAAI,cAAc,IAAIJ,GAAG,EACxBA,GAAG,CAACO,YAAY,GAAGzE,IAAI,CAACoB,KAAK;IAE9B,IAAI,iBAAiB,IAAI8C,GAAG,EAC3BA,GAAG,CAACN,eAAe,GAAG,CAAC,CAAC7D,IAAI,CAAC6D,eAAe;IAE7C,IAAI5D,IAAI,CAACoB,KAAK,KAAK,MAAM,IAAI,kBAAkB,IAAI8C,GAAG,EACrDA,GAAG,CAAChD,gBAAgB,CAAC,oCAAoC,CAAC;IAE3D,IAAI,gBAAgB,IAAInB,IAAI,EAAE;MAC7BmE,GAAG,CAAC9B,OAAO,GAAGrC,IAAI,CAACsD,cAAc;MACjCa,GAAG,CAACQ,SAAS,GAAG,YAAY;QAC3B1E,IAAI,CAACuD,IAAI,CAAC,gBAAgB,CAAC;MAC5B,CAAC;IACF;IAEAZ,WAAW,CAAC7B,OAAO,CAAC,UAAUmB,MAAM,EAAE;MACrCiC,GAAG,CAACS,gBAAgB,CAAC1C,MAAM,CAAC,CAAC,CAAC,EAAEA,MAAM,CAAC,CAAC,CAAC,CAAC;IAC3C,CAAC,CAAC;IAEFjC,IAAI,CAAC4E,SAAS,GAAG,IAAI;IACrBV,GAAG,CAACW,kBAAkB,GAAG,YAAY;MACpC,QAAQX,GAAG,CAACY,UAAU;QACrB,KAAK3F,OAAO,CAAC4F,OAAO;QACpB,KAAK5F,OAAO,CAAC6F,IAAI;UAChBhF,IAAI,CAACiF,cAAc,CAAC,CAAC;UACrB;MACF;IACD,CAAC;IACD;IACA;IACA,IAAIjF,IAAI,CAACoB,KAAK,KAAK,yBAAyB,EAAE;MAC7C8C,GAAG,CAACgB,UAAU,GAAG,YAAY;QAC5BlF,IAAI,CAACiF,cAAc,CAAC,CAAC;MACtB,CAAC;IACF;IAEAf,GAAG,CAACiB,OAAO,GAAG,YAAY;MACzB,IAAInF,IAAI,CAACmC,UAAU,EAClB;MACDnC,IAAI,CAAC+D,YAAY,CAAC,IAAI,CAAC;MACvB/D,IAAI,CAACuD,IAAI,CAAC,OAAO,EAAE,IAAIpC,KAAK,CAAC,WAAW,CAAC,CAAC;IAC3C,CAAC;IAED,IAAI;MACH+C,GAAG,CAACkB,IAAI,CAAC7C,IAAI,CAAC;IACf,CAAC,CAAC,OAAO+B,GAAG,EAAE;MACbC,OAAO,CAACC,QAAQ,CAAC,YAAY;QAC5BxE,IAAI,CAACuD,IAAI,CAAC,OAAO,EAAEe,GAAG,CAAC;MACxB,CAAC,CAAC;MACF;IACD;EACD;AACD,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,SAASe,WAAWA,CAAEnB,GAAG,EAAE;EAC1B,IAAI;IACH,IAAIoB,MAAM,GAAGpB,GAAG,CAACoB,MAAM;IACvB,OAAQA,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,CAAC;EACxC,CAAC,CAAC,OAAOC,CAAC,EAAE;IACX,OAAO,KAAK;EACb;AACD;AAEA3F,aAAa,CAAC8B,SAAS,CAACuD,cAAc,GAAG,YAAY;EACpD,IAAIjF,IAAI,GAAG,IAAI;EAEfA,IAAI,CAAC+D,YAAY,CAAC,KAAK,CAAC;EAExB,IAAI,CAACsB,WAAW,CAACrF,IAAI,CAACmE,IAAI,CAAC,IAAInE,IAAI,CAACmC,UAAU,EAC7C;EAED,IAAI,CAACnC,IAAI,CAAC4E,SAAS,EAClB5E,IAAI,CAACgE,QAAQ,CAAC,CAAC;EAEhBhE,IAAI,CAAC4E,SAAS,CAACK,cAAc,CAACjF,IAAI,CAAC+D,YAAY,CAACyB,IAAI,CAACxF,IAAI,CAAC,CAAC;AAC5D,CAAC;AAEDJ,aAAa,CAAC8B,SAAS,CAACsC,QAAQ,GAAG,YAAY;EAC9C,IAAIhE,IAAI,GAAG,IAAI;EAEf,IAAIA,IAAI,CAACmC,UAAU,EAClB;EAEDnC,IAAI,CAAC4E,SAAS,GAAG,IAAI1F,eAAe,CAACc,IAAI,CAACmE,IAAI,EAAEnE,IAAI,CAAC8D,cAAc,EAAE9D,IAAI,CAACoB,KAAK,EAAEpB,IAAI,CAAC+D,YAAY,CAACyB,IAAI,CAACxF,IAAI,CAAC,CAAC;EAC9GA,IAAI,CAAC4E,SAAS,CAACpD,EAAE,CAAC,OAAO,EAAE,UAAS8C,GAAG,EAAE;IACxCtE,IAAI,CAACuD,IAAI,CAAC,OAAO,EAAEe,GAAG,CAAC;EACxB,CAAC,CAAC;EAEFtE,IAAI,CAACuD,IAAI,CAAC,UAAU,EAAEvD,IAAI,CAAC4E,SAAS,CAAC;AACtC,CAAC;AAEDhF,aAAa,CAAC8B,SAAS,CAAC+D,MAAM,GAAG,UAAUC,KAAK,EAAEC,QAAQ,EAAEC,EAAE,EAAE;EAC/D,IAAI5F,IAAI,GAAG,IAAI;EAEfA,IAAI,CAACI,KAAK,CAAC4C,IAAI,CAAC0C,KAAK,CAAC;EACtBE,EAAE,CAAC,CAAC;AACL,CAAC;AAEDhG,aAAa,CAAC8B,SAAS,CAACqC,YAAY,GAAG,UAAU8B,IAAI,EAAE;EACtD,IAAI7F,IAAI,GAAG,IAAI;EAEfsD,MAAM,CAACwC,YAAY,CAAC9F,IAAI,CAACuB,YAAY,CAAC;EACtCvB,IAAI,CAACuB,YAAY,GAAG,IAAI;EAExB,IAAIsE,IAAI,EAAE;IACTvC,MAAM,CAACwC,YAAY,CAAC9F,IAAI,CAACqB,WAAW,CAAC;IACrCrB,IAAI,CAACqB,WAAW,GAAG,IAAI;EACxB,CAAC,MAAM,IAAIrB,IAAI,CAACsB,cAAc,EAAE;IAC/BtB,IAAI,CAACuB,YAAY,GAAG+B,MAAM,CAACjB,UAAU,CAAC,YAAY;MACjDrC,IAAI,CAACuD,IAAI,CAAC,SAAS,CAAC;IACrB,CAAC,EAAEvD,IAAI,CAACsB,cAAc,CAAC;EACxB;AACD,CAAC;AAED1B,aAAa,CAAC8B,SAAS,CAAC8B,KAAK,GAAG5D,aAAa,CAAC8B,SAAS,CAACqE,OAAO,GAAG,UAAUzB,GAAG,EAAE;EAChF,IAAItE,IAAI,GAAG,IAAI;EACfA,IAAI,CAACmC,UAAU,GAAG,IAAI;EACtBnC,IAAI,CAAC+D,YAAY,CAAC,IAAI,CAAC;EACvB,IAAI/D,IAAI,CAAC4E,SAAS,EACjB5E,IAAI,CAAC4E,SAAS,CAACzC,UAAU,GAAG,IAAI;EACjC,IAAInC,IAAI,CAACmE,IAAI,EACZnE,IAAI,CAACmE,IAAI,CAACX,KAAK,CAAC,CAAC,MACb,IAAIxD,IAAI,CAACoD,qBAAqB,EAClCpD,IAAI,CAACoD,qBAAqB,CAACI,KAAK,CAAC,CAAC;EAEnC,IAAIc,GAAG,EACNtE,IAAI,CAACuD,IAAI,CAAC,OAAO,EAAEe,GAAG,CAAC;AACzB,CAAC;AAED1E,aAAa,CAAC8B,SAAS,CAACsE,GAAG,GAAG,UAAUC,IAAI,EAAEN,QAAQ,EAAEC,EAAE,EAAE;EAC3D,IAAI5F,IAAI,GAAG,IAAI;EACf,IAAI,OAAOiG,IAAI,KAAK,UAAU,EAAE;IAC/BL,EAAE,GAAGK,IAAI;IACTA,IAAI,GAAGvC,SAAS;EACjB;EAEAzE,MAAM,CAACgB,QAAQ,CAACyB,SAAS,CAACsE,GAAG,CAAC9F,IAAI,CAACF,IAAI,EAAEiG,IAAI,EAAEN,QAAQ,EAAEC,EAAE,CAAC;AAC7D,CAAC;AAEDhG,aAAa,CAAC8B,SAAS,CAACW,UAAU,GAAG,UAAUD,OAAO,EAAEwD,EAAE,EAAE;EAC3D,IAAI5F,IAAI,GAAG,IAAI;EAEf,IAAI4F,EAAE,EACL5F,IAAI,CAACkG,IAAI,CAAC,SAAS,EAAEN,EAAE,CAAC;EAEzB5F,IAAI,CAACsB,cAAc,GAAGc,OAAO;EAC7BpC,IAAI,CAAC+D,YAAY,CAAC,KAAK,CAAC;AACzB,CAAC;AAEDnE,aAAa,CAAC8B,SAAS,CAACyE,YAAY,GAAG,YAAY,CAAC,CAAC;AACrDvG,aAAa,CAAC8B,SAAS,CAAC0E,UAAU,GAAG,YAAY,CAAC,CAAC;AACnDxG,aAAa,CAAC8B,SAAS,CAAC2E,kBAAkB,GAAG,YAAY,CAAC,CAAC;;AAE3D;AACA,IAAIvE,aAAa,GAAG,CACnB,gBAAgB,EAChB,iBAAiB,EACjB,gCAAgC,EAChC,+BAA+B,EAC/B,YAAY,EACZ,gBAAgB,EAChB,QAAQ,EACR,SAAS,EACT,MAAM,EACN,KAAK,EACL,QAAQ,EACR,MAAM,EACN,YAAY,EACZ,QAAQ,EACR,SAAS,EACT,IAAI,EACJ,SAAS,EACT,mBAAmB,EACnB,SAAS,EACT,KAAK,CACL","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}