{"ast":null,"code":"'use strict';\n\nconst fs = require('graceful-fs');\nconst path = require('path');\nconst copySync = require('../copy').copySync;\nconst removeSync = require('../remove').removeSync;\nconst mkdirpSync = require('../mkdirs').mkdirpSync;\nconst stat = require('../util/stat');\nfunction moveSync(src, dest, opts) {\n  opts = opts || {};\n  const overwrite = opts.overwrite || opts.clobber || false;\n  const {\n    srcStat,\n    isChangingCase = false\n  } = stat.checkPathsSync(src, dest, 'move', opts);\n  stat.checkParentPathsSync(src, srcStat, dest, 'move');\n  if (!isParentRoot(dest)) mkdirpSync(path.dirname(dest));\n  return doRename(src, dest, overwrite, isChangingCase);\n}\nfunction isParentRoot(dest) {\n  const parent = path.dirname(dest);\n  const parsedPath = path.parse(parent);\n  return parsedPath.root === parent;\n}\nfunction doRename(src, dest, overwrite, isChangingCase) {\n  if (isChangingCase) return rename(src, dest, overwrite);\n  if (overwrite) {\n    removeSync(dest);\n    return rename(src, dest, overwrite);\n  }\n  if (fs.existsSync(dest)) throw new Error('dest already exists.');\n  return rename(src, dest, overwrite);\n}\nfunction rename(src, dest, overwrite) {\n  try {\n    fs.renameSync(src, dest);\n  } catch (err) {\n    if (err.code !== 'EXDEV') throw err;\n    return moveAcrossDevice(src, dest, overwrite);\n  }\n}\nfunction moveAcrossDevice(src, dest, overwrite) {\n  const opts = {\n    overwrite,\n    errorOnExist: true,\n    preserveTimestamps: true\n  };\n  copySync(src, dest, opts);\n  return removeSync(src);\n}\nmodule.exports = moveSync;","map":{"version":3,"names":["fs","require","path","copySync","removeSync","mkdirpSync","stat","moveSync","src","dest","opts","overwrite","clobber","srcStat","isChangingCase","checkPathsSync","checkParentPathsSync","isParentRoot","dirname","doRename","parent","parsedPath","parse","root","rename","existsSync","Error","renameSync","err","code","moveAcrossDevice","errorOnExist","preserveTimestamps","module","exports"],"sources":["/home/paulo/.Code/web/login-estructura/login-no-funcional/node_modules/fs-extra/lib/move/move-sync.js"],"sourcesContent":["'use strict'\n\nconst fs = require('graceful-fs')\nconst path = require('path')\nconst copySync = require('../copy').copySync\nconst removeSync = require('../remove').removeSync\nconst mkdirpSync = require('../mkdirs').mkdirpSync\nconst stat = require('../util/stat')\n\nfunction moveSync (src, dest, opts) {\n  opts = opts || {}\n  const overwrite = opts.overwrite || opts.clobber || false\n\n  const { srcStat, isChangingCase = false } = stat.checkPathsSync(src, dest, 'move', opts)\n  stat.checkParentPathsSync(src, srcStat, dest, 'move')\n  if (!isParentRoot(dest)) mkdirpSync(path.dirname(dest))\n  return doRename(src, dest, overwrite, isChangingCase)\n}\n\nfunction isParentRoot (dest) {\n  const parent = path.dirname(dest)\n  const parsedPath = path.parse(parent)\n  return parsedPath.root === parent\n}\n\nfunction doRename (src, dest, overwrite, isChangingCase) {\n  if (isChangingCase) return rename(src, dest, overwrite)\n  if (overwrite) {\n    removeSync(dest)\n    return rename(src, dest, overwrite)\n  }\n  if (fs.existsSync(dest)) throw new Error('dest already exists.')\n  return rename(src, dest, overwrite)\n}\n\nfunction rename (src, dest, overwrite) {\n  try {\n    fs.renameSync(src, dest)\n  } catch (err) {\n    if (err.code !== 'EXDEV') throw err\n    return moveAcrossDevice(src, dest, overwrite)\n  }\n}\n\nfunction moveAcrossDevice (src, dest, overwrite) {\n  const opts = {\n    overwrite,\n    errorOnExist: true,\n    preserveTimestamps: true\n  }\n  copySync(src, dest, opts)\n  return removeSync(src)\n}\n\nmodule.exports = moveSync\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,EAAE,GAAGC,OAAO,CAAC,aAAa,CAAC;AACjC,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAME,QAAQ,GAAGF,OAAO,CAAC,SAAS,CAAC,CAACE,QAAQ;AAC5C,MAAMC,UAAU,GAAGH,OAAO,CAAC,WAAW,CAAC,CAACG,UAAU;AAClD,MAAMC,UAAU,GAAGJ,OAAO,CAAC,WAAW,CAAC,CAACI,UAAU;AAClD,MAAMC,IAAI,GAAGL,OAAO,CAAC,cAAc,CAAC;AAEpC,SAASM,QAAQA,CAAEC,GAAG,EAAEC,IAAI,EAAEC,IAAI,EAAE;EAClCA,IAAI,GAAGA,IAAI,IAAI,CAAC,CAAC;EACjB,MAAMC,SAAS,GAAGD,IAAI,CAACC,SAAS,IAAID,IAAI,CAACE,OAAO,IAAI,KAAK;EAEzD,MAAM;IAAEC,OAAO;IAAEC,cAAc,GAAG;EAAM,CAAC,GAAGR,IAAI,CAACS,cAAc,CAACP,GAAG,EAAEC,IAAI,EAAE,MAAM,EAAEC,IAAI,CAAC;EACxFJ,IAAI,CAACU,oBAAoB,CAACR,GAAG,EAAEK,OAAO,EAAEJ,IAAI,EAAE,MAAM,CAAC;EACrD,IAAI,CAACQ,YAAY,CAACR,IAAI,CAAC,EAAEJ,UAAU,CAACH,IAAI,CAACgB,OAAO,CAACT,IAAI,CAAC,CAAC;EACvD,OAAOU,QAAQ,CAACX,GAAG,EAAEC,IAAI,EAAEE,SAAS,EAAEG,cAAc,CAAC;AACvD;AAEA,SAASG,YAAYA,CAAER,IAAI,EAAE;EAC3B,MAAMW,MAAM,GAAGlB,IAAI,CAACgB,OAAO,CAACT,IAAI,CAAC;EACjC,MAAMY,UAAU,GAAGnB,IAAI,CAACoB,KAAK,CAACF,MAAM,CAAC;EACrC,OAAOC,UAAU,CAACE,IAAI,KAAKH,MAAM;AACnC;AAEA,SAASD,QAAQA,CAAEX,GAAG,EAAEC,IAAI,EAAEE,SAAS,EAAEG,cAAc,EAAE;EACvD,IAAIA,cAAc,EAAE,OAAOU,MAAM,CAAChB,GAAG,EAAEC,IAAI,EAAEE,SAAS,CAAC;EACvD,IAAIA,SAAS,EAAE;IACbP,UAAU,CAACK,IAAI,CAAC;IAChB,OAAOe,MAAM,CAAChB,GAAG,EAAEC,IAAI,EAAEE,SAAS,CAAC;EACrC;EACA,IAAIX,EAAE,CAACyB,UAAU,CAAChB,IAAI,CAAC,EAAE,MAAM,IAAIiB,KAAK,CAAC,sBAAsB,CAAC;EAChE,OAAOF,MAAM,CAAChB,GAAG,EAAEC,IAAI,EAAEE,SAAS,CAAC;AACrC;AAEA,SAASa,MAAMA,CAAEhB,GAAG,EAAEC,IAAI,EAAEE,SAAS,EAAE;EACrC,IAAI;IACFX,EAAE,CAAC2B,UAAU,CAACnB,GAAG,EAAEC,IAAI,CAAC;EAC1B,CAAC,CAAC,OAAOmB,GAAG,EAAE;IACZ,IAAIA,GAAG,CAACC,IAAI,KAAK,OAAO,EAAE,MAAMD,GAAG;IACnC,OAAOE,gBAAgB,CAACtB,GAAG,EAAEC,IAAI,EAAEE,SAAS,CAAC;EAC/C;AACF;AAEA,SAASmB,gBAAgBA,CAAEtB,GAAG,EAAEC,IAAI,EAAEE,SAAS,EAAE;EAC/C,MAAMD,IAAI,GAAG;IACXC,SAAS;IACToB,YAAY,EAAE,IAAI;IAClBC,kBAAkB,EAAE;EACtB,CAAC;EACD7B,QAAQ,CAACK,GAAG,EAAEC,IAAI,EAAEC,IAAI,CAAC;EACzB,OAAON,UAAU,CAACI,GAAG,CAAC;AACxB;AAEAyB,MAAM,CAACC,OAAO,GAAG3B,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}