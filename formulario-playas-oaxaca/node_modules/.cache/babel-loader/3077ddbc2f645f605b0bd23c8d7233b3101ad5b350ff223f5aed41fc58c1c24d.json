{"ast":null,"code":"var fs = require('fs');\nvar polyfills = require('./polyfills.js');\nvar legacy = require('./legacy-streams.js');\nvar clone = require('./clone.js');\nvar util = require('util');\n\n/* istanbul ignore next - node 0.x polyfill */\nvar gracefulQueue;\nvar previousSymbol;\n\n/* istanbul ignore else - node 0.x polyfill */\nif (typeof Symbol === 'function' && typeof Symbol.for === 'function') {\n  gracefulQueue = Symbol.for('graceful-fs.queue');\n  // This is used in testing by future versions\n  previousSymbol = Symbol.for('graceful-fs.previous');\n} else {\n  gracefulQueue = '___graceful-fs.queue';\n  previousSymbol = '___graceful-fs.previous';\n}\nfunction noop() {}\nfunction publishQueue(context, queue) {\n  Object.defineProperty(context, gracefulQueue, {\n    get: function () {\n      return queue;\n    }\n  });\n}\nvar debug = noop;\nif (util.debuglog) debug = util.debuglog('gfs4');else if (/\\bgfs4\\b/i.test(process.env.NODE_DEBUG || '')) debug = function () {\n  var m = util.format.apply(util, arguments);\n  m = 'GFS4: ' + m.split(/\\n/).join('\\nGFS4: ');\n  console.error(m);\n};\n\n// Once time initialization\nif (!fs[gracefulQueue]) {\n  // This queue can be shared by multiple loaded instances\n  var queue = global[gracefulQueue] || [];\n  publishQueue(fs, queue);\n\n  // Patch fs.close/closeSync to shared queue version, because we need\n  // to retry() whenever a close happens *anywhere* in the program.\n  // This is essential when multiple graceful-fs instances are\n  // in play at the same time.\n  fs.close = function (fs$close) {\n    function close(fd, cb) {\n      return fs$close.call(fs, fd, function (err) {\n        // This function uses the graceful-fs shared queue\n        if (!err) {\n          resetQueue();\n        }\n        if (typeof cb === 'function') cb.apply(this, arguments);\n      });\n    }\n    Object.defineProperty(close, previousSymbol, {\n      value: fs$close\n    });\n    return close;\n  }(fs.close);\n  fs.closeSync = function (fs$closeSync) {\n    function closeSync(fd) {\n      // This function uses the graceful-fs shared queue\n      fs$closeSync.apply(fs, arguments);\n      resetQueue();\n    }\n    Object.defineProperty(closeSync, previousSymbol, {\n      value: fs$closeSync\n    });\n    return closeSync;\n  }(fs.closeSync);\n  if (/\\bgfs4\\b/i.test(process.env.NODE_DEBUG || '')) {\n    process.on('exit', function () {\n      debug(fs[gracefulQueue]);\n      require('assert').equal(fs[gracefulQueue].length, 0);\n    });\n  }\n}\nif (!global[gracefulQueue]) {\n  publishQueue(global, fs[gracefulQueue]);\n}\nmodule.exports = patch(clone(fs));\nif (process.env.TEST_GRACEFUL_FS_GLOBAL_PATCH && !fs.__patched) {\n  module.exports = patch(fs);\n  fs.__patched = true;\n}\nfunction patch(fs) {\n  // Everything that references the open() function needs to be in here\n  polyfills(fs);\n  fs.gracefulify = patch;\n  fs.createReadStream = createReadStream;\n  fs.createWriteStream = createWriteStream;\n  var fs$readFile = fs.readFile;\n  fs.readFile = readFile;\n  function readFile(path, options, cb) {\n    if (typeof options === 'function') cb = options, options = null;\n    return go$readFile(path, options, cb);\n    function go$readFile(path, options, cb, startTime) {\n      return fs$readFile(path, options, function (err) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE')) enqueue([go$readFile, [path, options, cb], err, startTime || Date.now(), Date.now()]);else {\n          if (typeof cb === 'function') cb.apply(this, arguments);\n        }\n      });\n    }\n  }\n  var fs$writeFile = fs.writeFile;\n  fs.writeFile = writeFile;\n  function writeFile(path, data, options, cb) {\n    if (typeof options === 'function') cb = options, options = null;\n    return go$writeFile(path, data, options, cb);\n    function go$writeFile(path, data, options, cb, startTime) {\n      return fs$writeFile(path, data, options, function (err) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE')) enqueue([go$writeFile, [path, data, options, cb], err, startTime || Date.now(), Date.now()]);else {\n          if (typeof cb === 'function') cb.apply(this, arguments);\n        }\n      });\n    }\n  }\n  var fs$appendFile = fs.appendFile;\n  if (fs$appendFile) fs.appendFile = appendFile;\n  function appendFile(path, data, options, cb) {\n    if (typeof options === 'function') cb = options, options = null;\n    return go$appendFile(path, data, options, cb);\n    function go$appendFile(path, data, options, cb, startTime) {\n      return fs$appendFile(path, data, options, function (err) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE')) enqueue([go$appendFile, [path, data, options, cb], err, startTime || Date.now(), Date.now()]);else {\n          if (typeof cb === 'function') cb.apply(this, arguments);\n        }\n      });\n    }\n  }\n  var fs$copyFile = fs.copyFile;\n  if (fs$copyFile) fs.copyFile = copyFile;\n  function copyFile(src, dest, flags, cb) {\n    if (typeof flags === 'function') {\n      cb = flags;\n      flags = 0;\n    }\n    return go$copyFile(src, dest, flags, cb);\n    function go$copyFile(src, dest, flags, cb, startTime) {\n      return fs$copyFile(src, dest, flags, function (err) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE')) enqueue([go$copyFile, [src, dest, flags, cb], err, startTime || Date.now(), Date.now()]);else {\n          if (typeof cb === 'function') cb.apply(this, arguments);\n        }\n      });\n    }\n  }\n  var fs$readdir = fs.readdir;\n  fs.readdir = readdir;\n  var noReaddirOptionVersions = /^v[0-5]\\./;\n  function readdir(path, options, cb) {\n    if (typeof options === 'function') cb = options, options = null;\n    var go$readdir = noReaddirOptionVersions.test(process.version) ? function go$readdir(path, options, cb, startTime) {\n      return fs$readdir(path, fs$readdirCallback(path, options, cb, startTime));\n    } : function go$readdir(path, options, cb, startTime) {\n      return fs$readdir(path, options, fs$readdirCallback(path, options, cb, startTime));\n    };\n    return go$readdir(path, options, cb);\n    function fs$readdirCallback(path, options, cb, startTime) {\n      return function (err, files) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE')) enqueue([go$readdir, [path, options, cb], err, startTime || Date.now(), Date.now()]);else {\n          if (files && files.sort) files.sort();\n          if (typeof cb === 'function') cb.call(this, err, files);\n        }\n      };\n    }\n  }\n  if (process.version.substr(0, 4) === 'v0.8') {\n    var legStreams = legacy(fs);\n    ReadStream = legStreams.ReadStream;\n    WriteStream = legStreams.WriteStream;\n  }\n  var fs$ReadStream = fs.ReadStream;\n  if (fs$ReadStream) {\n    ReadStream.prototype = Object.create(fs$ReadStream.prototype);\n    ReadStream.prototype.open = ReadStream$open;\n  }\n  var fs$WriteStream = fs.WriteStream;\n  if (fs$WriteStream) {\n    WriteStream.prototype = Object.create(fs$WriteStream.prototype);\n    WriteStream.prototype.open = WriteStream$open;\n  }\n  Object.defineProperty(fs, 'ReadStream', {\n    get: function () {\n      return ReadStream;\n    },\n    set: function (val) {\n      ReadStream = val;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(fs, 'WriteStream', {\n    get: function () {\n      return WriteStream;\n    },\n    set: function (val) {\n      WriteStream = val;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  // legacy names\n  var FileReadStream = ReadStream;\n  Object.defineProperty(fs, 'FileReadStream', {\n    get: function () {\n      return FileReadStream;\n    },\n    set: function (val) {\n      FileReadStream = val;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  var FileWriteStream = WriteStream;\n  Object.defineProperty(fs, 'FileWriteStream', {\n    get: function () {\n      return FileWriteStream;\n    },\n    set: function (val) {\n      FileWriteStream = val;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  function ReadStream(path, options) {\n    if (this instanceof ReadStream) return fs$ReadStream.apply(this, arguments), this;else return ReadStream.apply(Object.create(ReadStream.prototype), arguments);\n  }\n  function ReadStream$open() {\n    var that = this;\n    open(that.path, that.flags, that.mode, function (err, fd) {\n      if (err) {\n        if (that.autoClose) that.destroy();\n        that.emit('error', err);\n      } else {\n        that.fd = fd;\n        that.emit('open', fd);\n        that.read();\n      }\n    });\n  }\n  function WriteStream(path, options) {\n    if (this instanceof WriteStream) return fs$WriteStream.apply(this, arguments), this;else return WriteStream.apply(Object.create(WriteStream.prototype), arguments);\n  }\n  function WriteStream$open() {\n    var that = this;\n    open(that.path, that.flags, that.mode, function (err, fd) {\n      if (err) {\n        that.destroy();\n        that.emit('error', err);\n      } else {\n        that.fd = fd;\n        that.emit('open', fd);\n      }\n    });\n  }\n  function createReadStream(path, options) {\n    return new fs.ReadStream(path, options);\n  }\n  function createWriteStream(path, options) {\n    return new fs.WriteStream(path, options);\n  }\n  var fs$open = fs.open;\n  fs.open = open;\n  function open(path, flags, mode, cb) {\n    if (typeof mode === 'function') cb = mode, mode = null;\n    return go$open(path, flags, mode, cb);\n    function go$open(path, flags, mode, cb, startTime) {\n      return fs$open(path, flags, mode, function (err, fd) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE')) enqueue([go$open, [path, flags, mode, cb], err, startTime || Date.now(), Date.now()]);else {\n          if (typeof cb === 'function') cb.apply(this, arguments);\n        }\n      });\n    }\n  }\n  return fs;\n}\nfunction enqueue(elem) {\n  debug('ENQUEUE', elem[0].name, elem[1]);\n  fs[gracefulQueue].push(elem);\n  retry();\n}\n\n// keep track of the timeout between retry() calls\nvar retryTimer;\n\n// reset the startTime and lastTime to now\n// this resets the start of the 60 second overall timeout as well as the\n// delay between attempts so that we'll retry these jobs sooner\nfunction resetQueue() {\n  var now = Date.now();\n  for (var i = 0; i < fs[gracefulQueue].length; ++i) {\n    // entries that are only a length of 2 are from an older version, don't\n    // bother modifying those since they'll be retried anyway.\n    if (fs[gracefulQueue][i].length > 2) {\n      fs[gracefulQueue][i][3] = now; // startTime\n      fs[gracefulQueue][i][4] = now; // lastTime\n    }\n  }\n  // call retry to make sure we're actively processing the queue\n  retry();\n}\nfunction retry() {\n  // clear the timer and remove it to help prevent unintended concurrency\n  clearTimeout(retryTimer);\n  retryTimer = undefined;\n  if (fs[gracefulQueue].length === 0) return;\n  var elem = fs[gracefulQueue].shift();\n  var fn = elem[0];\n  var args = elem[1];\n  // these items may be unset if they were added by an older graceful-fs\n  var err = elem[2];\n  var startTime = elem[3];\n  var lastTime = elem[4];\n\n  // if we don't have a startTime we have no way of knowing if we've waited\n  // long enough, so go ahead and retry this item now\n  if (startTime === undefined) {\n    debug('RETRY', fn.name, args);\n    fn.apply(null, args);\n  } else if (Date.now() - startTime >= 60000) {\n    // it's been more than 60 seconds total, bail now\n    debug('TIMEOUT', fn.name, args);\n    var cb = args.pop();\n    if (typeof cb === 'function') cb.call(null, err);\n  } else {\n    // the amount of time between the last attempt and right now\n    var sinceAttempt = Date.now() - lastTime;\n    // the amount of time between when we first tried, and when we last tried\n    // rounded up to at least 1\n    var sinceStart = Math.max(lastTime - startTime, 1);\n    // backoff. wait longer than the total time we've been retrying, but only\n    // up to a maximum of 100ms\n    var desiredDelay = Math.min(sinceStart * 1.2, 100);\n    // it's been long enough since the last retry, do it again\n    if (sinceAttempt >= desiredDelay) {\n      debug('RETRY', fn.name, args);\n      fn.apply(null, args.concat([startTime]));\n    } else {\n      // if we can't do this job yet, push it to the end of the queue\n      // and let the next iteration check again\n      fs[gracefulQueue].push(elem);\n    }\n  }\n\n  // schedule our next run if one isn't already scheduled\n  if (retryTimer === undefined) {\n    retryTimer = setTimeout(retry, 0);\n  }\n}","map":{"version":3,"names":["fs","require","polyfills","legacy","clone","util","gracefulQueue","previousSymbol","Symbol","for","noop","publishQueue","context","queue","Object","defineProperty","get","debug","debuglog","test","process","env","NODE_DEBUG","m","format","apply","arguments","split","join","console","error","global","close","fs$close","fd","cb","call","err","resetQueue","value","closeSync","fs$closeSync","on","equal","length","module","exports","patch","TEST_GRACEFUL_FS_GLOBAL_PATCH","__patched","gracefulify","createReadStream","createWriteStream","fs$readFile","readFile","path","options","go$readFile","startTime","code","enqueue","Date","now","fs$writeFile","writeFile","data","go$writeFile","fs$appendFile","appendFile","go$appendFile","fs$copyFile","copyFile","src","dest","flags","go$copyFile","fs$readdir","readdir","noReaddirOptionVersions","go$readdir","version","fs$readdirCallback","files","sort","substr","legStreams","ReadStream","WriteStream","fs$ReadStream","prototype","create","open","ReadStream$open","fs$WriteStream","WriteStream$open","set","val","enumerable","configurable","FileReadStream","FileWriteStream","that","mode","autoClose","destroy","emit","read","fs$open","go$open","elem","name","push","retry","retryTimer","i","clearTimeout","undefined","shift","fn","args","lastTime","pop","sinceAttempt","sinceStart","Math","max","desiredDelay","min","concat","setTimeout"],"sources":["/home/paulo/.Code/web/login-estructura/login-no-funcional/node_modules/graceful-fs/graceful-fs.js"],"sourcesContent":["var fs = require('fs')\nvar polyfills = require('./polyfills.js')\nvar legacy = require('./legacy-streams.js')\nvar clone = require('./clone.js')\n\nvar util = require('util')\n\n/* istanbul ignore next - node 0.x polyfill */\nvar gracefulQueue\nvar previousSymbol\n\n/* istanbul ignore else - node 0.x polyfill */\nif (typeof Symbol === 'function' && typeof Symbol.for === 'function') {\n  gracefulQueue = Symbol.for('graceful-fs.queue')\n  // This is used in testing by future versions\n  previousSymbol = Symbol.for('graceful-fs.previous')\n} else {\n  gracefulQueue = '___graceful-fs.queue'\n  previousSymbol = '___graceful-fs.previous'\n}\n\nfunction noop () {}\n\nfunction publishQueue(context, queue) {\n  Object.defineProperty(context, gracefulQueue, {\n    get: function() {\n      return queue\n    }\n  })\n}\n\nvar debug = noop\nif (util.debuglog)\n  debug = util.debuglog('gfs4')\nelse if (/\\bgfs4\\b/i.test(process.env.NODE_DEBUG || ''))\n  debug = function() {\n    var m = util.format.apply(util, arguments)\n    m = 'GFS4: ' + m.split(/\\n/).join('\\nGFS4: ')\n    console.error(m)\n  }\n\n// Once time initialization\nif (!fs[gracefulQueue]) {\n  // This queue can be shared by multiple loaded instances\n  var queue = global[gracefulQueue] || []\n  publishQueue(fs, queue)\n\n  // Patch fs.close/closeSync to shared queue version, because we need\n  // to retry() whenever a close happens *anywhere* in the program.\n  // This is essential when multiple graceful-fs instances are\n  // in play at the same time.\n  fs.close = (function (fs$close) {\n    function close (fd, cb) {\n      return fs$close.call(fs, fd, function (err) {\n        // This function uses the graceful-fs shared queue\n        if (!err) {\n          resetQueue()\n        }\n\n        if (typeof cb === 'function')\n          cb.apply(this, arguments)\n      })\n    }\n\n    Object.defineProperty(close, previousSymbol, {\n      value: fs$close\n    })\n    return close\n  })(fs.close)\n\n  fs.closeSync = (function (fs$closeSync) {\n    function closeSync (fd) {\n      // This function uses the graceful-fs shared queue\n      fs$closeSync.apply(fs, arguments)\n      resetQueue()\n    }\n\n    Object.defineProperty(closeSync, previousSymbol, {\n      value: fs$closeSync\n    })\n    return closeSync\n  })(fs.closeSync)\n\n  if (/\\bgfs4\\b/i.test(process.env.NODE_DEBUG || '')) {\n    process.on('exit', function() {\n      debug(fs[gracefulQueue])\n      require('assert').equal(fs[gracefulQueue].length, 0)\n    })\n  }\n}\n\nif (!global[gracefulQueue]) {\n  publishQueue(global, fs[gracefulQueue]);\n}\n\nmodule.exports = patch(clone(fs))\nif (process.env.TEST_GRACEFUL_FS_GLOBAL_PATCH && !fs.__patched) {\n    module.exports = patch(fs)\n    fs.__patched = true;\n}\n\nfunction patch (fs) {\n  // Everything that references the open() function needs to be in here\n  polyfills(fs)\n  fs.gracefulify = patch\n\n  fs.createReadStream = createReadStream\n  fs.createWriteStream = createWriteStream\n  var fs$readFile = fs.readFile\n  fs.readFile = readFile\n  function readFile (path, options, cb) {\n    if (typeof options === 'function')\n      cb = options, options = null\n\n    return go$readFile(path, options, cb)\n\n    function go$readFile (path, options, cb, startTime) {\n      return fs$readFile(path, options, function (err) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n          enqueue([go$readFile, [path, options, cb], err, startTime || Date.now(), Date.now()])\n        else {\n          if (typeof cb === 'function')\n            cb.apply(this, arguments)\n        }\n      })\n    }\n  }\n\n  var fs$writeFile = fs.writeFile\n  fs.writeFile = writeFile\n  function writeFile (path, data, options, cb) {\n    if (typeof options === 'function')\n      cb = options, options = null\n\n    return go$writeFile(path, data, options, cb)\n\n    function go$writeFile (path, data, options, cb, startTime) {\n      return fs$writeFile(path, data, options, function (err) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n          enqueue([go$writeFile, [path, data, options, cb], err, startTime || Date.now(), Date.now()])\n        else {\n          if (typeof cb === 'function')\n            cb.apply(this, arguments)\n        }\n      })\n    }\n  }\n\n  var fs$appendFile = fs.appendFile\n  if (fs$appendFile)\n    fs.appendFile = appendFile\n  function appendFile (path, data, options, cb) {\n    if (typeof options === 'function')\n      cb = options, options = null\n\n    return go$appendFile(path, data, options, cb)\n\n    function go$appendFile (path, data, options, cb, startTime) {\n      return fs$appendFile(path, data, options, function (err) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n          enqueue([go$appendFile, [path, data, options, cb], err, startTime || Date.now(), Date.now()])\n        else {\n          if (typeof cb === 'function')\n            cb.apply(this, arguments)\n        }\n      })\n    }\n  }\n\n  var fs$copyFile = fs.copyFile\n  if (fs$copyFile)\n    fs.copyFile = copyFile\n  function copyFile (src, dest, flags, cb) {\n    if (typeof flags === 'function') {\n      cb = flags\n      flags = 0\n    }\n    return go$copyFile(src, dest, flags, cb)\n\n    function go$copyFile (src, dest, flags, cb, startTime) {\n      return fs$copyFile(src, dest, flags, function (err) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n          enqueue([go$copyFile, [src, dest, flags, cb], err, startTime || Date.now(), Date.now()])\n        else {\n          if (typeof cb === 'function')\n            cb.apply(this, arguments)\n        }\n      })\n    }\n  }\n\n  var fs$readdir = fs.readdir\n  fs.readdir = readdir\n  var noReaddirOptionVersions = /^v[0-5]\\./\n  function readdir (path, options, cb) {\n    if (typeof options === 'function')\n      cb = options, options = null\n\n    var go$readdir = noReaddirOptionVersions.test(process.version)\n      ? function go$readdir (path, options, cb, startTime) {\n        return fs$readdir(path, fs$readdirCallback(\n          path, options, cb, startTime\n        ))\n      }\n      : function go$readdir (path, options, cb, startTime) {\n        return fs$readdir(path, options, fs$readdirCallback(\n          path, options, cb, startTime\n        ))\n      }\n\n    return go$readdir(path, options, cb)\n\n    function fs$readdirCallback (path, options, cb, startTime) {\n      return function (err, files) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n          enqueue([\n            go$readdir,\n            [path, options, cb],\n            err,\n            startTime || Date.now(),\n            Date.now()\n          ])\n        else {\n          if (files && files.sort)\n            files.sort()\n\n          if (typeof cb === 'function')\n            cb.call(this, err, files)\n        }\n      }\n    }\n  }\n\n  if (process.version.substr(0, 4) === 'v0.8') {\n    var legStreams = legacy(fs)\n    ReadStream = legStreams.ReadStream\n    WriteStream = legStreams.WriteStream\n  }\n\n  var fs$ReadStream = fs.ReadStream\n  if (fs$ReadStream) {\n    ReadStream.prototype = Object.create(fs$ReadStream.prototype)\n    ReadStream.prototype.open = ReadStream$open\n  }\n\n  var fs$WriteStream = fs.WriteStream\n  if (fs$WriteStream) {\n    WriteStream.prototype = Object.create(fs$WriteStream.prototype)\n    WriteStream.prototype.open = WriteStream$open\n  }\n\n  Object.defineProperty(fs, 'ReadStream', {\n    get: function () {\n      return ReadStream\n    },\n    set: function (val) {\n      ReadStream = val\n    },\n    enumerable: true,\n    configurable: true\n  })\n  Object.defineProperty(fs, 'WriteStream', {\n    get: function () {\n      return WriteStream\n    },\n    set: function (val) {\n      WriteStream = val\n    },\n    enumerable: true,\n    configurable: true\n  })\n\n  // legacy names\n  var FileReadStream = ReadStream\n  Object.defineProperty(fs, 'FileReadStream', {\n    get: function () {\n      return FileReadStream\n    },\n    set: function (val) {\n      FileReadStream = val\n    },\n    enumerable: true,\n    configurable: true\n  })\n  var FileWriteStream = WriteStream\n  Object.defineProperty(fs, 'FileWriteStream', {\n    get: function () {\n      return FileWriteStream\n    },\n    set: function (val) {\n      FileWriteStream = val\n    },\n    enumerable: true,\n    configurable: true\n  })\n\n  function ReadStream (path, options) {\n    if (this instanceof ReadStream)\n      return fs$ReadStream.apply(this, arguments), this\n    else\n      return ReadStream.apply(Object.create(ReadStream.prototype), arguments)\n  }\n\n  function ReadStream$open () {\n    var that = this\n    open(that.path, that.flags, that.mode, function (err, fd) {\n      if (err) {\n        if (that.autoClose)\n          that.destroy()\n\n        that.emit('error', err)\n      } else {\n        that.fd = fd\n        that.emit('open', fd)\n        that.read()\n      }\n    })\n  }\n\n  function WriteStream (path, options) {\n    if (this instanceof WriteStream)\n      return fs$WriteStream.apply(this, arguments), this\n    else\n      return WriteStream.apply(Object.create(WriteStream.prototype), arguments)\n  }\n\n  function WriteStream$open () {\n    var that = this\n    open(that.path, that.flags, that.mode, function (err, fd) {\n      if (err) {\n        that.destroy()\n        that.emit('error', err)\n      } else {\n        that.fd = fd\n        that.emit('open', fd)\n      }\n    })\n  }\n\n  function createReadStream (path, options) {\n    return new fs.ReadStream(path, options)\n  }\n\n  function createWriteStream (path, options) {\n    return new fs.WriteStream(path, options)\n  }\n\n  var fs$open = fs.open\n  fs.open = open\n  function open (path, flags, mode, cb) {\n    if (typeof mode === 'function')\n      cb = mode, mode = null\n\n    return go$open(path, flags, mode, cb)\n\n    function go$open (path, flags, mode, cb, startTime) {\n      return fs$open(path, flags, mode, function (err, fd) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n          enqueue([go$open, [path, flags, mode, cb], err, startTime || Date.now(), Date.now()])\n        else {\n          if (typeof cb === 'function')\n            cb.apply(this, arguments)\n        }\n      })\n    }\n  }\n\n  return fs\n}\n\nfunction enqueue (elem) {\n  debug('ENQUEUE', elem[0].name, elem[1])\n  fs[gracefulQueue].push(elem)\n  retry()\n}\n\n// keep track of the timeout between retry() calls\nvar retryTimer\n\n// reset the startTime and lastTime to now\n// this resets the start of the 60 second overall timeout as well as the\n// delay between attempts so that we'll retry these jobs sooner\nfunction resetQueue () {\n  var now = Date.now()\n  for (var i = 0; i < fs[gracefulQueue].length; ++i) {\n    // entries that are only a length of 2 are from an older version, don't\n    // bother modifying those since they'll be retried anyway.\n    if (fs[gracefulQueue][i].length > 2) {\n      fs[gracefulQueue][i][3] = now // startTime\n      fs[gracefulQueue][i][4] = now // lastTime\n    }\n  }\n  // call retry to make sure we're actively processing the queue\n  retry()\n}\n\nfunction retry () {\n  // clear the timer and remove it to help prevent unintended concurrency\n  clearTimeout(retryTimer)\n  retryTimer = undefined\n\n  if (fs[gracefulQueue].length === 0)\n    return\n\n  var elem = fs[gracefulQueue].shift()\n  var fn = elem[0]\n  var args = elem[1]\n  // these items may be unset if they were added by an older graceful-fs\n  var err = elem[2]\n  var startTime = elem[3]\n  var lastTime = elem[4]\n\n  // if we don't have a startTime we have no way of knowing if we've waited\n  // long enough, so go ahead and retry this item now\n  if (startTime === undefined) {\n    debug('RETRY', fn.name, args)\n    fn.apply(null, args)\n  } else if (Date.now() - startTime >= 60000) {\n    // it's been more than 60 seconds total, bail now\n    debug('TIMEOUT', fn.name, args)\n    var cb = args.pop()\n    if (typeof cb === 'function')\n      cb.call(null, err)\n  } else {\n    // the amount of time between the last attempt and right now\n    var sinceAttempt = Date.now() - lastTime\n    // the amount of time between when we first tried, and when we last tried\n    // rounded up to at least 1\n    var sinceStart = Math.max(lastTime - startTime, 1)\n    // backoff. wait longer than the total time we've been retrying, but only\n    // up to a maximum of 100ms\n    var desiredDelay = Math.min(sinceStart * 1.2, 100)\n    // it's been long enough since the last retry, do it again\n    if (sinceAttempt >= desiredDelay) {\n      debug('RETRY', fn.name, args)\n      fn.apply(null, args.concat([startTime]))\n    } else {\n      // if we can't do this job yet, push it to the end of the queue\n      // and let the next iteration check again\n      fs[gracefulQueue].push(elem)\n    }\n  }\n\n  // schedule our next run if one isn't already scheduled\n  if (retryTimer === undefined) {\n    retryTimer = setTimeout(retry, 0)\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}