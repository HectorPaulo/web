{"ast":null,"code":"var _jsxFileName = \"/home/paulo/.Code/web/login-estructura/login-no-funcional/src/Components/RegisterForm/RegisterForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n// Importa React y el hook useState desde la librería 'react'.\n\nimport './RegisterForm.css';\n// Importa el archivo CSS para estilizar el componente.\n\nimport { FaUser, FaLock } from \"react-icons/fa\";\n// Importa los iconos de usuario y candado desde la librería 'react-icons/fa'.\n\nimport { ToastContainer, toast } from 'react-toastify';\n// Importa el contenedor y la función 'toast' desde la librería 'react-toastify' para mostrar notificaciones.\n\nimport 'react-toastify/dist/ReactToastify.css';\n// Importa el archivo CSS necesario para el correcto funcionamiento de 'react-toastify'.\n\nimport { Link } from 'react-router-dom';\n// Importa el componente 'Link' desde la librería 'react-router-dom' para la navegación interna.\n\nimport axios from 'axios';\n// Importa la librería 'axios' para realizar peticiones HTTP.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterForm = () => {\n  _s();\n  // Define el componente funcional RegisterForm.\n\n  const [userId, setUserId] = useState('');\n  // Declara una variable de estado 'userId' con su función 'setUserId', inicializada con una cadena vacía.\n\n  const [password, setPassword] = useState('');\n  // Declara una variable de estado 'password' con su función 'setPassword', inicializada con una cadena vacía.\n\n  const [confirmPassword, setConfirmPassword] = useState('');\n  // Declara una variable de estado 'confirmPassword' con su función 'setConfirmPassword', inicializada con una cadena vacía.\n\n  const handleUserIdChange = e => {\n    const value = e.target.value;\n    // Captura el valor del campo de entrada.\n\n    if (!/^\\d*$/.test(value)) {\n      return;\n    }\n    // Permite solo valores numéricos.\n\n    if (value.length <= 9) {\n      setUserId(value);\n    }\n    // Permite un máximo de 9 dígitos para 'userId'.\n  };\n  const validateUserId = id => {\n    const regex = /^\\d{9}$/;\n    // Define una expresión regular que exige exactamente 9 dígitos.\n\n    if (!regex.test(id)) {\n      return 'El ID de usuario debe contener exactamente 9 dígitos.';\n    }\n    // Si 'id' no coincide con la expresión regular, retorna un mensaje de error.\n\n    return '';\n    // Si 'id' es válido, retorna una cadena vacía.\n  };\n  const validatePassword = pass => {\n    const regex = /^(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\n    // Define una expresión regular que exige al menos 8 caracteres, una letra mayúscula, un número y un carácter especial.\n\n    if (!regex.test(pass)) {\n      return 'La contraseña debe tener al menos 8 caracteres, una mayúscula, un número y un carácter especial.';\n    }\n    // Si 'pass' no coincide con la expresión regular, retorna un mensaje de error.\n\n    return '';\n    // Si 'pass' es válida, retorna una cadena vacía.\n  };\n  const validateConfirmPassword = confirmPass => {\n    if (confirmPass !== password) {\n      return 'Las contraseñas no coinciden.';\n    }\n    // Si 'confirmPass' no coincide con 'password', retorna un mensaje de error.\n\n    return '';\n    // Si las contraseñas coinciden, retorna una cadena vacía.\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    // Previene el comportamiento predeterminado del formulario (recargar la página).\n\n    const userIdError = validateUserId(userId);\n    // Valida 'userId' y almacena el resultado en 'userIdError'.\n\n    const passwordError = validatePassword(password);\n    // Valida 'password' y almacena el resultado en 'passwordError'.\n\n    const confirmPasswordError = validateConfirmPassword(confirmPassword);\n    // Valida 'confirmPassword' y almacena el resultado en 'confirmPasswordError'.\n\n    if (userIdError) {\n      toast.error(userIdError);\n      return;\n    }\n    // Si hay un error en 'userId', muestra una notificación de error y termina la función.\n\n    if (passwordError) {\n      toast.error(passwordError);\n      return;\n    }\n    // Si hay un error en 'password', muestra una notificación de error y termina la función.\n\n    if (confirmPasswordError) {\n      toast.error(confirmPasswordError);\n      return;\n    }\n    // Si hay un error en 'confirmPassword', muestra una notificación de error y termina la función.\n\n    try {\n      const response = await axios.post('http://localhost:3001/register', {\n        userId: userId,\n        password: password\n      });\n      // Intenta enviar una petición POST al servidor con 'userId' y 'password'.\n\n      if (response.status === 200) {\n        toast.success('Registro exitoso.');\n        // Si la respuesta del servidor es exitosa (código 200), muestra una notificación de éxito.\n\n        setUserId('');\n        setPassword('');\n        setConfirmPassword('');\n        // Limpia los campos del formulario.\n      }\n    } catch (error) {\n      toast.error('Error al registrar el usuario.');\n      // Si ocurre un error durante la petición, muestra una notificación de error.\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Registro\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), \"// Muestra un encabezado \\\"Registro\\\".\", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-box\",\n        children: [\"// Define un div con la clase 'input-box'.\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"ID de Usuario\",\n          value: userId,\n          onChange: handleUserIdChange,\n          required: true,\n          maxLength: 9,\n          className: userId.length === 9 ? 'valid' : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), \"// Define un campo de entrada para 'userId' con un placeholder, un valor vinculado al estado 'userId', un manejador de cambios, un m\\xE1ximo de 9 caracteres, y una clase que cambia a 'valid' cuando 'userId' tiene 9 caracteres.\", /*#__PURE__*/_jsxDEV(FaUser, {\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), \"// Muestra el icono de usuario junto al campo de entrada.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-box\",\n        children: [\"// Define un div con la clase 'input-box'.\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Contrase\\xF1a\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), \"// Define un campo de entrada para 'password' con un placeholder, un valor vinculado al estado 'password', y un manejador de cambios.\", /*#__PURE__*/_jsxDEV(FaLock, {\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), \"// Muestra el icono de candado junto al campo de entrada.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-box\",\n        children: [\"// Define un div con la clase 'input-box'.\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Confirmar Contrase\\xF1a\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), \"// Define un campo de entrada para 'confirmPassword' con un placeholder, un valor vinculado al estado 'confirmPassword', y un manejador de cambios.\", /*#__PURE__*/_jsxDEV(FaLock, {\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), \"// Muestra el icono de candado junto al campo de entrada.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Registrarse\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), \"// Define un bot\\xF3n de env\\xEDo para el formulario con el texto \\\"Registrarse\\\".\", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"register-link\",\n        children: [\"// Define un div con la clase 'register-link'.\", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\xBFYa tienes una cuenta? -\", '>', \" \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: \"Iniciar Sesi\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 44\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), \"// Muestra un texto con un enlace para iniciar sesi\\xF3n si ya se tiene una cuenta.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      position: \"top-center\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), \"// A\\xF1ade un contenedor para las notificaciones de 'toast' en la parte superior central.\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n};\n_s(RegisterForm, \"dd9nOP5Xl/CnSS1ghrJ/kKY03aE=\");\n_c = RegisterForm;\nexport default RegisterForm;\n// Exporta el componente RegisterForm como el export por defecto del módulo.\nvar _c;\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"names":["React","useState","FaUser","FaLock","ToastContainer","toast","Link","axios","jsxDEV","_jsxDEV","RegisterForm","_s","userId","setUserId","password","setPassword","confirmPassword","setConfirmPassword","handleUserIdChange","e","value","target","test","length","validateUserId","id","regex","validatePassword","pass","validateConfirmPassword","confirmPass","handleSubmit","event","preventDefault","userIdError","passwordError","confirmPasswordError","error","response","post","status","success","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","required","maxLength","to","position","_c","$RefreshReg$"],"sources":["/home/paulo/.Code/web/login-estructura/login-no-funcional/src/Components/RegisterForm/RegisterForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\n// Importa React y el hook useState desde la librería 'react'.\n\nimport './RegisterForm.css';\n// Importa el archivo CSS para estilizar el componente.\n\nimport { FaUser, FaLock } from \"react-icons/fa\";\n// Importa los iconos de usuario y candado desde la librería 'react-icons/fa'.\n\nimport { ToastContainer, toast } from 'react-toastify';\n// Importa el contenedor y la función 'toast' desde la librería 'react-toastify' para mostrar notificaciones.\n\nimport 'react-toastify/dist/ReactToastify.css';\n// Importa el archivo CSS necesario para el correcto funcionamiento de 'react-toastify'.\n\nimport { Link } from 'react-router-dom';\n// Importa el componente 'Link' desde la librería 'react-router-dom' para la navegación interna.\n\nimport axios from 'axios';\n// Importa la librería 'axios' para realizar peticiones HTTP.\n\nconst RegisterForm = () => {\n// Define el componente funcional RegisterForm.\n\n  const [userId, setUserId] = useState('');\n  // Declara una variable de estado 'userId' con su función 'setUserId', inicializada con una cadena vacía.\n\n  const [password, setPassword] = useState('');\n  // Declara una variable de estado 'password' con su función 'setPassword', inicializada con una cadena vacía.\n\n  const [confirmPassword, setConfirmPassword] = useState('');\n  // Declara una variable de estado 'confirmPassword' con su función 'setConfirmPassword', inicializada con una cadena vacía.\n\n  const handleUserIdChange = (e) => {\n    const value = e.target.value;\n    // Captura el valor del campo de entrada.\n\n    if (!/^\\d*$/.test(value)) {\n      return;\n    }\n    // Permite solo valores numéricos.\n\n    if (value.length <= 9) {\n      setUserId(value);\n    }\n    // Permite un máximo de 9 dígitos para 'userId'.\n  };\n\n  const validateUserId = (id) => {\n    const regex = /^\\d{9}$/;\n    // Define una expresión regular que exige exactamente 9 dígitos.\n\n    if (!regex.test(id)) {\n      return 'El ID de usuario debe contener exactamente 9 dígitos.';\n    }\n    // Si 'id' no coincide con la expresión regular, retorna un mensaje de error.\n\n    return '';\n    // Si 'id' es válido, retorna una cadena vacía.\n  };\n\n  const validatePassword = (pass) => {\n    const regex = /^(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\n    // Define una expresión regular que exige al menos 8 caracteres, una letra mayúscula, un número y un carácter especial.\n\n    if (!regex.test(pass)) {\n      return 'La contraseña debe tener al menos 8 caracteres, una mayúscula, un número y un carácter especial.';\n    }\n    // Si 'pass' no coincide con la expresión regular, retorna un mensaje de error.\n\n    return '';\n    // Si 'pass' es válida, retorna una cadena vacía.\n  };\n\n  const validateConfirmPassword = (confirmPass) => {\n    if (confirmPass !== password) {\n      return 'Las contraseñas no coinciden.';\n    }\n    // Si 'confirmPass' no coincide con 'password', retorna un mensaje de error.\n\n    return '';\n    // Si las contraseñas coinciden, retorna una cadena vacía.\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    // Previene el comportamiento predeterminado del formulario (recargar la página).\n\n    const userIdError = validateUserId(userId);\n    // Valida 'userId' y almacena el resultado en 'userIdError'.\n\n    const passwordError = validatePassword(password);\n    // Valida 'password' y almacena el resultado en 'passwordError'.\n\n    const confirmPasswordError = validateConfirmPassword(confirmPassword);\n    // Valida 'confirmPassword' y almacena el resultado en 'confirmPasswordError'.\n\n    if (userIdError) {\n      toast.error(userIdError);\n      return;\n    }\n    // Si hay un error en 'userId', muestra una notificación de error y termina la función.\n\n    if (passwordError) {\n      toast.error(passwordError);\n      return;\n    }\n    // Si hay un error en 'password', muestra una notificación de error y termina la función.\n\n    if (confirmPasswordError) {\n      toast.error(confirmPasswordError);\n      return;\n    }\n    // Si hay un error en 'confirmPassword', muestra una notificación de error y termina la función.\n\n    try {\n      const response = await axios.post('http://localhost:3001/register', {\n        userId: userId,\n        password: password\n      });\n      // Intenta enviar una petición POST al servidor con 'userId' y 'password'.\n\n      if (response.status === 200) {\n        toast.success('Registro exitoso.');\n        // Si la respuesta del servidor es exitosa (código 200), muestra una notificación de éxito.\n\n        setUserId('');\n        setPassword('');\n        setConfirmPassword('');\n        // Limpia los campos del formulario.\n      }\n    } catch (error) {\n      toast.error('Error al registrar el usuario.');\n      // Si ocurre un error durante la petición, muestra una notificación de error.\n    }\n  };\n\n  return (\n    <div className='wrapper'>\n\n      <form onSubmit={handleSubmit}>\n\n        <h1>Registro</h1>\n        // Muestra un encabezado \"Registro\".\n\n        <div className=\"input-box\">\n        // Define un div con la clase 'input-box'.\n\n          <input\n            type=\"text\"\n            placeholder=\"ID de Usuario\"\n            value={userId}\n            onChange={handleUserIdChange}\n            required\n            maxLength={9}\n            className={userId.length === 9 ? 'valid' : ''}\n          />\n          // Define un campo de entrada para 'userId' con un placeholder, un valor vinculado al estado 'userId', un manejador de cambios, un máximo de 9 caracteres, y una clase que cambia a 'valid' cuando 'userId' tiene 9 caracteres.\n\n          <FaUser className='icon' />\n          // Muestra el icono de usuario junto al campo de entrada.\n        </div>\n\n        <div className=\"input-box\">\n        // Define un div con la clase 'input-box'.\n\n          <input\n            type=\"password\"\n            placeholder=\"Contraseña\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            required\n          />\n          // Define un campo de entrada para 'password' con un placeholder, un valor vinculado al estado 'password', y un manejador de cambios.\n\n          <FaLock className='icon' />\n          // Muestra el icono de candado junto al campo de entrada.\n        </div>\n\n        <div className=\"input-box\">\n        // Define un div con la clase 'input-box'.\n\n          <input\n            type=\"password\"\n            placeholder=\"Confirmar Contraseña\"\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n            required\n          />\n          // Define un campo de entrada para 'confirmPassword' con un placeholder, un valor vinculado al estado 'confirmPassword', y un manejador de cambios.\n\n          <FaLock className='icon' />\n          // Muestra el icono de candado junto al campo de entrada.\n        </div>\n\n        <button type=\"submit\">Registrarse</button>\n        // Define un botón de envío para el formulario con el texto \"Registrarse\".\n\n        <div className=\"register-link\">\n        // Define un div con la clase 'register-link'.\n\n          <p>¿Ya tienes una cuenta? -{'>'} <Link to=\"/\">Iniciar Sesión</Link></p>\n          // Muestra un texto con un enlace para iniciar sesión si ya se tiene una cuenta.\n        </div>\n      </form>\n\n      <ToastContainer position=\"top-center\" />\n      // Añade un contenedor para las notificaciones de 'toast' en la parte superior central.\n    </div>\n  );\n};\n\nexport default RegisterForm;\n// Exporta el componente RegisterForm como el export por defecto del módulo.\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}